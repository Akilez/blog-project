0 info it worked if it ends with ok
1 verbose cli [ 'c:\\Program Files\\nodejs\\node.exe',
1 verbose cli   'c:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'install',
1 verbose cli   'scrypt' ]
2 info using npm@1.4.3
3 info using node@v0.10.26
4 warn package.json simple-blog-project@0.0.0 No repository field.
5 warn package.json simple-blog-project@0.0.0 No README data
6 verbose readDependencies using package.json deps
7 verbose cache add [ 'scrypt', null ]
8 verbose cache add name=undefined spec="scrypt" args=["scrypt",null]
9 verbose parsed url { protocol: null,
9 verbose parsed url   slashes: null,
9 verbose parsed url   auth: null,
9 verbose parsed url   host: null,
9 verbose parsed url   port: null,
9 verbose parsed url   hostname: null,
9 verbose parsed url   hash: null,
9 verbose parsed url   search: null,
9 verbose parsed url   query: null,
9 verbose parsed url   pathname: 'scrypt',
9 verbose parsed url   path: 'scrypt',
9 verbose parsed url   href: 'scrypt' }
10 silly lockFile bad20f2c-scrypt scrypt
11 verbose lock scrypt C:\Users\open\AppData\Roaming\npm-cache\bad20f2c-scrypt.lock
12 silly lockFile bad20f2c-scrypt scrypt
13 silly lockFile bad20f2c-scrypt scrypt
14 verbose addNamed [ 'scrypt', '' ]
15 verbose addNamed [ null, '*' ]
16 silly lockFile df13ca7f-scrypt scrypt@
17 verbose lock scrypt@ C:\Users\open\AppData\Roaming\npm-cache\df13ca7f-scrypt.lock
18 silly addNameRange { name: 'scrypt', range: '*', hasData: false }
19 verbose url raw scrypt
20 verbose url resolving [ 'https://registry.npmjs.org/', './scrypt' ]
21 verbose url resolved https://registry.npmjs.org/scrypt
22 info trying registry request attempt 1 at 18:44:51
23 http GET https://registry.npmjs.org/scrypt
24 http 200 https://registry.npmjs.org/scrypt
25 silly registry.get cb [ 200,
25 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
25 silly registry.get     etag: '"CIGMV6ANAPCLLMZEWY4C2V4DO"',
25 silly registry.get     'content-type': 'application/json',
25 silly registry.get     'cache-control': 'max-age=60',
25 silly registry.get     'content-length': '63386',
25 silly registry.get     'accept-ranges': 'bytes',
25 silly registry.get     date: 'Fri, 05 Jun 2015 01:44:46 GMT',
25 silly registry.get     via: '1.1 varnish',
25 silly registry.get     age: '0',
25 silly registry.get     connection: 'keep-alive',
25 silly registry.get     'x-served-by': 'cache-lax1431-LAX',
25 silly registry.get     'x-cache': 'MISS',
25 silly registry.get     'x-cache-hits': '0',
25 silly registry.get     'x-timer': 'S1433468686.422103,VS0,VE275',
25 silly registry.get     vary: 'Accept' } ]
26 silly addNameRange number 2 { name: 'scrypt', range: '*', hasData: true }
27 silly addNameRange versions [ 'scrypt',
27 silly addNameRange   [ '1.0.0',
27 silly addNameRange     '1.1.0',
27 silly addNameRange     '1.2.0',
27 silly addNameRange     '1.3.0',
27 silly addNameRange     '1.3.1',
27 silly addNameRange     '1.4.0',
27 silly addNameRange     '1.4.1',
27 silly addNameRange     '1.4.2',
27 silly addNameRange     '1.5.0',
27 silly addNameRange     '1.5.1',
27 silly addNameRange     '1.5.2',
27 silly addNameRange     '1.5.3',
27 silly addNameRange     '1.6.0',
27 silly addNameRange     '1.6.1',
27 silly addNameRange     '1.6.2',
27 silly addNameRange     '1.6.3',
27 silly addNameRange     '1.7.0',
27 silly addNameRange     '1.7.1',
27 silly addNameRange     '1.7.2',
27 silly addNameRange     '1.7.3',
27 silly addNameRange     '1.7.4',
27 silly addNameRange     '2.0.0',
27 silly addNameRange     '2.0.2',
27 silly addNameRange     '3.0.0',
27 silly addNameRange     '3.0.1',
27 silly addNameRange     '4.0.0',
27 silly addNameRange     '4.0.1',
27 silly addNameRange     '4.0.2',
27 silly addNameRange     '4.0.3',
27 silly addNameRange     '4.0.4',
27 silly addNameRange     '4.0.5',
27 silly addNameRange     '4.0.6',
27 silly addNameRange     '4.0.7' ] ]
28 verbose addNamed [ 'scrypt', '4.0.7' ]
29 verbose addNamed [ '4.0.7', '4.0.7' ]
30 silly lockFile 9bb1e31c-scrypt-4-0-7 scrypt@4.0.7
31 verbose lock scrypt@4.0.7 C:\Users\open\AppData\Roaming\npm-cache\9bb1e31c-scrypt-4-0-7.lock
32 silly lockFile 25beb727-pmjs-org-scrypt-scrypt-4-0-7-tgz https://registry.npmjs.org/scrypt/-/scrypt-4.0.7.tgz
33 verbose lock https://registry.npmjs.org/scrypt/-/scrypt-4.0.7.tgz C:\Users\open\AppData\Roaming\npm-cache\25beb727-pmjs-org-scrypt-scrypt-4-0-7-tgz.lock
34 verbose addRemoteTarball [ 'https://registry.npmjs.org/scrypt/-/scrypt-4.0.7.tgz',
34 verbose addRemoteTarball   '25c6722792d22ba06b6ccc92fb21e03137f8eb1d' ]
35 info retry fetch attempt 1 at 18:44:51
36 verbose fetch to= C:\Users\open\AppData\Local\Temp\npm-4832-2CJLymA1\1433468691771-0.9385439653415233\tmp.tgz
37 http GET https://registry.npmjs.org/scrypt/-/scrypt-4.0.7.tgz
38 http 200 https://registry.npmjs.org/scrypt/-/scrypt-4.0.7.tgz
39 verbose tar unpack C:\Users\open\AppData\Local\Temp\npm-4832-2CJLymA1\1433468691771-0.9385439653415233\tmp.tgz
40 silly lockFile 06359b2e-91771-0-9385439653415233-package tar://C:\Users\open\AppData\Local\Temp\npm-4832-2CJLymA1\1433468691771-0.9385439653415233\package
41 verbose lock tar://C:\Users\open\AppData\Local\Temp\npm-4832-2CJLymA1\1433468691771-0.9385439653415233\package C:\Users\open\AppData\Roaming\npm-cache\06359b2e-91771-0-9385439653415233-package.lock
42 silly lockFile 55ebc1f8-91771-0-9385439653415233-tmp-tgz tar://C:\Users\open\AppData\Local\Temp\npm-4832-2CJLymA1\1433468691771-0.9385439653415233\tmp.tgz
43 verbose lock tar://C:\Users\open\AppData\Local\Temp\npm-4832-2CJLymA1\1433468691771-0.9385439653415233\tmp.tgz C:\Users\open\AppData\Roaming\npm-cache\55ebc1f8-91771-0-9385439653415233-tmp-tgz.lock
44 silly gunzTarPerm modes [ '755', '644' ]
45 silly gunzTarPerm extractEntry package.json
46 silly gunzTarPerm modified mode [ 'package.json', 436, 420 ]
47 silly gunzTarPerm extractEntry .npmignore
48 silly gunzTarPerm modified mode [ '.npmignore', 436, 420 ]
49 silly gunzTarPerm extractEntry index.js
50 silly gunzTarPerm modified mode [ 'index.js', 436, 420 ]
51 silly gunzTarPerm extractEntry binding.gyp
52 silly gunzTarPerm modified mode [ 'binding.gyp', 436, 420 ]
53 silly gunzTarPerm extractEntry tests/scrypt-tests.js
54 silly gunzTarPerm modified mode [ 'tests/scrypt-tests.js', 436, 420 ]
55 silly gunzTarPerm extractEntry .travis.yml
56 silly gunzTarPerm modified mode [ '.travis.yml', 436, 420 ]
57 silly gunzTarPerm extractEntry Readme.md
58 silly gunzTarPerm modified mode [ 'Readme.md', 436, 420 ]
59 silly gunzTarPerm extractEntry scrypt/configuration/posix_configuration/Makefile.in
60 silly gunzTarPerm modified mode [ 'scrypt/configuration/posix_configuration/Makefile.in',
60 silly gunzTarPerm   436,
60 silly gunzTarPerm   420 ]
61 silly gunzTarPerm extractEntry scrypt/configuration/posix_configuration/config.aux/depcomp
62 silly gunzTarPerm modified mode [ 'scrypt/configuration/posix_configuration/config.aux/depcomp',
62 silly gunzTarPerm   509,
62 silly gunzTarPerm   493 ]
63 silly gunzTarPerm extractEntry scrypt/configuration/posix_configuration/config.aux/install-sh
64 silly gunzTarPerm modified mode [ 'scrypt/configuration/posix_configuration/config.aux/install-sh',
64 silly gunzTarPerm   509,
64 silly gunzTarPerm   493 ]
65 silly gunzTarPerm extractEntry scrypt/configuration/posix_configuration/config.aux/missing
66 silly gunzTarPerm modified mode [ 'scrypt/configuration/posix_configuration/config.aux/missing',
66 silly gunzTarPerm   509,
66 silly gunzTarPerm   493 ]
67 silly gunzTarPerm extractEntry scrypt/configuration/posix_configuration/config.h.in
68 silly gunzTarPerm modified mode [ 'scrypt/configuration/posix_configuration/config.h.in',
68 silly gunzTarPerm   436,
68 silly gunzTarPerm   420 ]
69 silly gunzTarPerm extractEntry scrypt/configuration/posix_configuration/configure
70 silly gunzTarPerm modified mode [ 'scrypt/configuration/posix_configuration/configure',
70 silly gunzTarPerm   509,
70 silly gunzTarPerm   493 ]
71 silly gunzTarPerm extractEntry scrypt/configuration/posixconfig
72 silly gunzTarPerm modified mode [ 'scrypt/configuration/posixconfig', 509, 493 ]
73 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/README
74 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/README', 436, 420 ]
75 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/crypto_aesctr.c
76 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/crypto_aesctr.c', 436, 420 ]
77 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/crypto_aesctr.h
78 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/crypto_aesctr.h', 436, 420 ]
79 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt-nosse.c
80 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt-nosse.c',
80 silly gunzTarPerm   436,
80 silly gunzTarPerm   420 ]
81 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt-ref.c
82 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt-ref.c',
82 silly gunzTarPerm   436,
82 silly gunzTarPerm   420 ]
83 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt-sse.c
84 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt-sse.c',
84 silly gunzTarPerm   436,
84 silly gunzTarPerm   420 ]
85 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt.h
86 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt.h', 436, 420 ]
87 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/sha256.c
88 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/sha256.c', 436, 420 ]
89 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/sha256.h
90 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/sha256.h', 436, 420 ]
91 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc.c
92 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc.c', 436, 420 ]
93 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc.h
94 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc.h', 436, 420 ]
95 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc_cpuperf.c
96 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc_cpuperf.c',
96 silly gunzTarPerm   436,
96 silly gunzTarPerm   420 ]
97 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc_cpuperf.h
98 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc_cpuperf.h',
98 silly gunzTarPerm   436,
98 silly gunzTarPerm   420 ]
99 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/memlimit.c
100 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/memlimit.c', 436, 420 ]
101 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/memlimit.h
102 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/memlimit.h', 436, 420 ]
103 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/readpass.c
104 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/readpass.c', 436, 420 ]
105 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/readpass.h
106 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/readpass.h', 436, 420 ]
107 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/sysendian.h
108 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/sysendian.h', 436, 420 ]
109 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/warn.c
110 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/warn.c', 436, 420 ]
111 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/warn.h
112 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/warn.h', 436, 420 ]
113 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/scrypt_platform.h
114 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/scrypt_platform.h', 436, 420 ]
115 silly gunzTarPerm extractEntry scrypt/win/gettimeofday.c
116 silly gunzTarPerm modified mode [ 'scrypt/win/gettimeofday.c', 436, 420 ]
117 silly gunzTarPerm extractEntry scrypt/win/include/config.h
118 silly gunzTarPerm modified mode [ 'scrypt/win/include/config.h', 436, 420 ]
119 silly gunzTarPerm extractEntry scrypt/win/include/gettimeofday.h
120 silly gunzTarPerm modified mode [ 'scrypt/win/include/gettimeofday.h', 436, 420 ]
121 silly gunzTarPerm extractEntry scrypt/win/include/inttypes.h
122 silly gunzTarPerm modified mode [ 'scrypt/win/include/inttypes.h', 436, 420 ]
123 silly gunzTarPerm extractEntry scrypt/win/include/stdint.h
124 silly gunzTarPerm modified mode [ 'scrypt/win/include/stdint.h', 436, 420 ]
125 silly gunzTarPerm extractEntry scrypt/win/include/sys/mman.h
126 silly gunzTarPerm modified mode [ 'scrypt/win/include/sys/mman.h', 436, 420 ]
127 silly gunzTarPerm extractEntry scrypt/win/include/unistd.h
128 silly gunzTarPerm modified mode [ 'scrypt/win/include/unistd.h', 436, 420 ]
129 silly gunzTarPerm extractEntry scrypt/win/libs/openssl_32/libeay32.lib
130 silly gunzTarPerm modified mode [ 'scrypt/win/libs/openssl_32/libeay32.lib', 436, 420 ]
131 silly gunzTarPerm extractEntry scrypt/win/libs/openssl_64/libeay32.lib
132 silly gunzTarPerm modified mode [ 'scrypt/win/libs/openssl_64/libeay32.lib', 436, 420 ]
133 silly gunzTarPerm extractEntry scrypt/win/memlimit.c
134 silly gunzTarPerm modified mode [ 'scrypt/win/memlimit.c', 436, 420 ]
135 silly gunzTarPerm extractEntry scrypt/win/mman.c
136 silly gunzTarPerm modified mode [ 'scrypt/win/mman.c', 436, 420 ]
137 silly gunzTarPerm extractEntry scrypt_node.cc
138 silly gunzTarPerm modified mode [ 'scrypt_node.cc', 436, 420 ]
139 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_hash.h
140 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_hash.h', 436, 420 ]
141 silly gunzTarPerm extractEntry src/node-boilerplate/common.cc
142 silly gunzTarPerm modified mode [ 'src/node-boilerplate/common.cc', 436, 420 ]
143 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_config_object.cc
144 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_config_object.cc', 436, 420 ]
145 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_config_object.h
146 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_config_object.h', 436, 420 ]
147 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_error.cc
148 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_error.cc', 436, 420 ]
149 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_error.h
150 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_error.h', 436, 420 ]
151 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_hash.cc
152 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_hash.cc', 436, 420 ]
153 silly gunzTarPerm extractEntry src/node-boilerplate/common.h
154 silly gunzTarPerm modified mode [ 'src/node-boilerplate/common.h', 436, 420 ]
155 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_kdf.cc
156 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_kdf.cc', 436, 420 ]
157 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_kdf.h
158 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_kdf.h', 436, 420 ]
159 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_params.cc
160 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_params.cc', 436, 420 ]
161 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_params.h
162 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_params.h', 436, 420 ]
163 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_verify.cc
164 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_verify.cc', 436, 420 ]
165 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_verify.h
166 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_verify.h', 436, 420 ]
167 silly gunzTarPerm extractEntry src/scryptwrapper/hash.c
168 silly gunzTarPerm modified mode [ 'src/scryptwrapper/hash.c', 436, 420 ]
169 silly gunzTarPerm extractEntry src/scryptwrapper/hash.h
170 silly gunzTarPerm modified mode [ 'src/scryptwrapper/hash.h', 436, 420 ]
171 silly gunzTarPerm extractEntry src/scryptwrapper/keyderivation.c
172 silly gunzTarPerm modified mode [ 'src/scryptwrapper/keyderivation.c', 436, 420 ]
173 silly gunzTarPerm extractEntry src/scryptwrapper/keyderivation.h
174 silly gunzTarPerm modified mode [ 'src/scryptwrapper/keyderivation.h', 436, 420 ]
175 silly gunzTarPerm extractEntry src/scryptwrapper/pickparams.c
176 silly gunzTarPerm modified mode [ 'src/scryptwrapper/pickparams.c', 436, 420 ]
177 silly gunzTarPerm extractEntry src/scryptwrapper/pickparams.h
178 silly gunzTarPerm modified mode [ 'src/scryptwrapper/pickparams.h', 436, 420 ]
179 silly gunzTarPerm extractEntry src/util/salt.c
180 silly gunzTarPerm modified mode [ 'src/util/salt.c', 436, 420 ]
181 silly gunzTarPerm extractEntry src/util/salt.h
182 silly gunzTarPerm modified mode [ 'src/util/salt.h', 436, 420 ]
183 silly lockFile 06359b2e-91771-0-9385439653415233-package tar://C:\Users\open\AppData\Local\Temp\npm-4832-2CJLymA1\1433468691771-0.9385439653415233\package
184 silly lockFile 06359b2e-91771-0-9385439653415233-package tar://C:\Users\open\AppData\Local\Temp\npm-4832-2CJLymA1\1433468691771-0.9385439653415233\package
185 silly lockFile 55ebc1f8-91771-0-9385439653415233-tmp-tgz tar://C:\Users\open\AppData\Local\Temp\npm-4832-2CJLymA1\1433468691771-0.9385439653415233\tmp.tgz
186 silly lockFile 55ebc1f8-91771-0-9385439653415233-tmp-tgz tar://C:\Users\open\AppData\Local\Temp\npm-4832-2CJLymA1\1433468691771-0.9385439653415233\tmp.tgz
187 verbose tar pack [ 'C:\\Users\\open\\AppData\\Roaming\\npm-cache\\scrypt\\4.0.7\\package.tgz',
187 verbose tar pack   'C:\\Users\\open\\AppData\\Local\\Temp\\npm-4832-2CJLymA1\\1433468691771-0.9385439653415233\\package' ]
188 verbose tarball C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package.tgz
189 verbose folder C:\Users\open\AppData\Local\Temp\npm-4832-2CJLymA1\1433468691771-0.9385439653415233\package
190 silly lockFile 06359b2e-91771-0-9385439653415233-package tar://C:\Users\open\AppData\Local\Temp\npm-4832-2CJLymA1\1433468691771-0.9385439653415233\package
191 verbose lock tar://C:\Users\open\AppData\Local\Temp\npm-4832-2CJLymA1\1433468691771-0.9385439653415233\package C:\Users\open\AppData\Roaming\npm-cache\06359b2e-91771-0-9385439653415233-package.lock
192 silly lockFile 7076d4dd-m-cache-scrypt-4-0-7-package-tgz tar://C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package.tgz
193 verbose lock tar://C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package.tgz C:\Users\open\AppData\Roaming\npm-cache\7076d4dd-m-cache-scrypt-4-0-7-package-tgz.lock
194 silly lockFile 06359b2e-91771-0-9385439653415233-package tar://C:\Users\open\AppData\Local\Temp\npm-4832-2CJLymA1\1433468691771-0.9385439653415233\package
195 silly lockFile 06359b2e-91771-0-9385439653415233-package tar://C:\Users\open\AppData\Local\Temp\npm-4832-2CJLymA1\1433468691771-0.9385439653415233\package
196 silly lockFile 7076d4dd-m-cache-scrypt-4-0-7-package-tgz tar://C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package.tgz
197 silly lockFile 7076d4dd-m-cache-scrypt-4-0-7-package-tgz tar://C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package.tgz
198 silly lockFile f29a80b3-g-npm-cache-scrypt-4-0-7-package C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package
199 verbose lock C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package C:\Users\open\AppData\Roaming\npm-cache\f29a80b3-g-npm-cache-scrypt-4-0-7-package.lock
200 silly lockFile f29a80b3-g-npm-cache-scrypt-4-0-7-package C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package
201 silly lockFile f29a80b3-g-npm-cache-scrypt-4-0-7-package C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package
202 verbose tar unpack C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package.tgz
203 silly lockFile b108f4d4-g-npm-cache-scrypt-4-0-7-package tar://C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package
204 verbose lock tar://C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package C:\Users\open\AppData\Roaming\npm-cache\b108f4d4-g-npm-cache-scrypt-4-0-7-package.lock
205 silly lockFile 7076d4dd-m-cache-scrypt-4-0-7-package-tgz tar://C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package.tgz
206 verbose lock tar://C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package.tgz C:\Users\open\AppData\Roaming\npm-cache\7076d4dd-m-cache-scrypt-4-0-7-package-tgz.lock
207 silly gunzTarPerm modes [ '755', '644' ]
208 silly gunzTarPerm extractEntry package.json
209 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
210 silly gunzTarPerm extractEntry .npmignore
211 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
212 silly gunzTarPerm extractEntry index.js
213 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
214 silly gunzTarPerm extractEntry .travis.yml
215 silly gunzTarPerm modified mode [ '.travis.yml', 438, 420 ]
216 silly gunzTarPerm extractEntry Readme.md
217 silly gunzTarPerm modified mode [ 'Readme.md', 438, 420 ]
218 silly gunzTarPerm extractEntry binding.gyp
219 silly gunzTarPerm modified mode [ 'binding.gyp', 438, 420 ]
220 silly gunzTarPerm extractEntry scrypt/configuration/posix_configuration/Makefile.in
221 silly gunzTarPerm modified mode [ 'scrypt/configuration/posix_configuration/Makefile.in',
221 silly gunzTarPerm   438,
221 silly gunzTarPerm   420 ]
222 silly gunzTarPerm extractEntry scrypt/configuration/posix_configuration/config.aux/depcomp
223 silly gunzTarPerm modified mode [ 'scrypt/configuration/posix_configuration/config.aux/depcomp',
223 silly gunzTarPerm   438,
223 silly gunzTarPerm   420 ]
224 silly gunzTarPerm extractEntry scrypt/configuration/posix_configuration/config.aux/install-sh
225 silly gunzTarPerm modified mode [ 'scrypt/configuration/posix_configuration/config.aux/install-sh',
225 silly gunzTarPerm   438,
225 silly gunzTarPerm   420 ]
226 silly gunzTarPerm extractEntry scrypt/configuration/posix_configuration/config.aux/missing
227 silly gunzTarPerm modified mode [ 'scrypt/configuration/posix_configuration/config.aux/missing',
227 silly gunzTarPerm   438,
227 silly gunzTarPerm   420 ]
228 silly gunzTarPerm extractEntry scrypt/configuration/posix_configuration/config.h.in
229 silly gunzTarPerm modified mode [ 'scrypt/configuration/posix_configuration/config.h.in',
229 silly gunzTarPerm   438,
229 silly gunzTarPerm   420 ]
230 silly gunzTarPerm extractEntry scrypt/configuration/posix_configuration/configure
231 silly gunzTarPerm modified mode [ 'scrypt/configuration/posix_configuration/configure',
231 silly gunzTarPerm   438,
231 silly gunzTarPerm   420 ]
232 silly gunzTarPerm extractEntry scrypt/configuration/posixconfig
233 silly gunzTarPerm modified mode [ 'scrypt/configuration/posixconfig', 438, 420 ]
234 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/README
235 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/README', 438, 420 ]
236 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/crypto_aesctr.c
237 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/crypto_aesctr.c', 438, 420 ]
238 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/crypto_aesctr.h
239 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/crypto_aesctr.h', 438, 420 ]
240 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt-nosse.c
241 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt-nosse.c',
241 silly gunzTarPerm   438,
241 silly gunzTarPerm   420 ]
242 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt-ref.c
243 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt-ref.c',
243 silly gunzTarPerm   438,
243 silly gunzTarPerm   420 ]
244 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt-sse.c
245 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt-sse.c',
245 silly gunzTarPerm   438,
245 silly gunzTarPerm   420 ]
246 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt.h
247 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt.h', 438, 420 ]
248 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/sha256.c
249 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/sha256.c', 438, 420 ]
250 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/sha256.h
251 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/sha256.h', 438, 420 ]
252 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc.c
253 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc.c', 438, 420 ]
254 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc.h
255 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc.h', 438, 420 ]
256 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc_cpuperf.c
257 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc_cpuperf.c',
257 silly gunzTarPerm   438,
257 silly gunzTarPerm   420 ]
258 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc_cpuperf.h
259 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc_cpuperf.h',
259 silly gunzTarPerm   438,
259 silly gunzTarPerm   420 ]
260 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/memlimit.c
261 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/memlimit.c', 438, 420 ]
262 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/memlimit.h
263 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/memlimit.h', 438, 420 ]
264 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/readpass.c
265 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/readpass.c', 438, 420 ]
266 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/readpass.h
267 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/readpass.h', 438, 420 ]
268 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/sysendian.h
269 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/sysendian.h', 438, 420 ]
270 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/warn.c
271 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/warn.c', 438, 420 ]
272 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/warn.h
273 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/warn.h', 438, 420 ]
274 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/scrypt_platform.h
275 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/scrypt_platform.h', 438, 420 ]
276 silly gunzTarPerm extractEntry scrypt/win/gettimeofday.c
277 silly gunzTarPerm modified mode [ 'scrypt/win/gettimeofday.c', 438, 420 ]
278 silly gunzTarPerm extractEntry scrypt/win/include/config.h
279 silly gunzTarPerm modified mode [ 'scrypt/win/include/config.h', 438, 420 ]
280 silly gunzTarPerm extractEntry scrypt/win/include/gettimeofday.h
281 silly gunzTarPerm modified mode [ 'scrypt/win/include/gettimeofday.h', 438, 420 ]
282 silly gunzTarPerm extractEntry scrypt/win/include/inttypes.h
283 silly gunzTarPerm modified mode [ 'scrypt/win/include/inttypes.h', 438, 420 ]
284 silly gunzTarPerm extractEntry scrypt/win/include/stdint.h
285 silly gunzTarPerm modified mode [ 'scrypt/win/include/stdint.h', 438, 420 ]
286 silly gunzTarPerm extractEntry scrypt/win/include/sys/mman.h
287 silly gunzTarPerm modified mode [ 'scrypt/win/include/sys/mman.h', 438, 420 ]
288 silly gunzTarPerm extractEntry scrypt/win/include/unistd.h
289 silly gunzTarPerm modified mode [ 'scrypt/win/include/unistd.h', 438, 420 ]
290 silly gunzTarPerm extractEntry scrypt/win/libs/openssl_32/libeay32.lib
291 silly gunzTarPerm modified mode [ 'scrypt/win/libs/openssl_32/libeay32.lib', 438, 420 ]
292 silly gunzTarPerm extractEntry scrypt/win/libs/openssl_64/libeay32.lib
293 silly gunzTarPerm modified mode [ 'scrypt/win/libs/openssl_64/libeay32.lib', 438, 420 ]
294 silly gunzTarPerm extractEntry scrypt/win/memlimit.c
295 silly gunzTarPerm modified mode [ 'scrypt/win/memlimit.c', 438, 420 ]
296 silly gunzTarPerm extractEntry scrypt/win/mman.c
297 silly gunzTarPerm modified mode [ 'scrypt/win/mman.c', 438, 420 ]
298 silly gunzTarPerm extractEntry scrypt_node.cc
299 silly gunzTarPerm modified mode [ 'scrypt_node.cc', 438, 420 ]
300 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_hash.h
301 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_hash.h', 438, 420 ]
302 silly gunzTarPerm extractEntry src/node-boilerplate/common.cc
303 silly gunzTarPerm modified mode [ 'src/node-boilerplate/common.cc', 438, 420 ]
304 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_config_object.cc
305 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_config_object.cc', 438, 420 ]
306 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_config_object.h
307 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_config_object.h', 438, 420 ]
308 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_error.cc
309 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_error.cc', 438, 420 ]
310 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_error.h
311 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_error.h', 438, 420 ]
312 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_hash.cc
313 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_hash.cc', 438, 420 ]
314 silly gunzTarPerm extractEntry src/node-boilerplate/common.h
315 silly gunzTarPerm modified mode [ 'src/node-boilerplate/common.h', 438, 420 ]
316 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_kdf.cc
317 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_kdf.cc', 438, 420 ]
318 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_kdf.h
319 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_kdf.h', 438, 420 ]
320 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_params.cc
321 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_params.cc', 438, 420 ]
322 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_params.h
323 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_params.h', 438, 420 ]
324 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_verify.cc
325 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_verify.cc', 438, 420 ]
326 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_verify.h
327 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_verify.h', 438, 420 ]
328 silly gunzTarPerm extractEntry src/scryptwrapper/hash.c
329 silly gunzTarPerm modified mode [ 'src/scryptwrapper/hash.c', 438, 420 ]
330 silly gunzTarPerm extractEntry src/scryptwrapper/hash.h
331 silly gunzTarPerm modified mode [ 'src/scryptwrapper/hash.h', 438, 420 ]
332 silly gunzTarPerm extractEntry src/scryptwrapper/keyderivation.c
333 silly gunzTarPerm modified mode [ 'src/scryptwrapper/keyderivation.c', 438, 420 ]
334 silly gunzTarPerm extractEntry src/scryptwrapper/keyderivation.h
335 silly gunzTarPerm modified mode [ 'src/scryptwrapper/keyderivation.h', 438, 420 ]
336 silly gunzTarPerm extractEntry src/scryptwrapper/pickparams.c
337 silly gunzTarPerm modified mode [ 'src/scryptwrapper/pickparams.c', 438, 420 ]
338 silly gunzTarPerm extractEntry src/scryptwrapper/pickparams.h
339 silly gunzTarPerm modified mode [ 'src/scryptwrapper/pickparams.h', 438, 420 ]
340 silly gunzTarPerm extractEntry src/util/salt.c
341 silly gunzTarPerm modified mode [ 'src/util/salt.c', 438, 420 ]
342 silly gunzTarPerm extractEntry src/util/salt.h
343 silly gunzTarPerm modified mode [ 'src/util/salt.h', 438, 420 ]
344 silly gunzTarPerm extractEntry tests/scrypt-tests.js
345 silly gunzTarPerm modified mode [ 'tests/scrypt-tests.js', 438, 420 ]
346 silly lockFile b108f4d4-g-npm-cache-scrypt-4-0-7-package tar://C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package
347 silly lockFile b108f4d4-g-npm-cache-scrypt-4-0-7-package tar://C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package
348 silly lockFile 7076d4dd-m-cache-scrypt-4-0-7-package-tgz tar://C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package.tgz
349 silly lockFile 7076d4dd-m-cache-scrypt-4-0-7-package-tgz tar://C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package.tgz
350 verbose chmod C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package.tgz 644
351 silly chown skipping for windows C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package.tgz
352 silly lockFile 25beb727-pmjs-org-scrypt-scrypt-4-0-7-tgz https://registry.npmjs.org/scrypt/-/scrypt-4.0.7.tgz
353 silly lockFile 25beb727-pmjs-org-scrypt-scrypt-4-0-7-tgz https://registry.npmjs.org/scrypt/-/scrypt-4.0.7.tgz
354 silly lockFile 9bb1e31c-scrypt-4-0-7 scrypt@4.0.7
355 silly lockFile 9bb1e31c-scrypt-4-0-7 scrypt@4.0.7
356 silly lockFile df13ca7f-scrypt scrypt@
357 silly lockFile df13ca7f-scrypt scrypt@
358 silly resolved [ { name: 'scrypt',
358 silly resolved     description: 'The scrypt crypto library for NodeJS',
358 silly resolved     version: '4.0.7',
358 silly resolved     keywords:
358 silly resolved      [ 'scrypt',
358 silly resolved        'password',
358 silly resolved        'auth',
358 silly resolved        'authentication',
358 silly resolved        'encryption',
358 silly resolved        'crypto',
358 silly resolved        'secret',
358 silly resolved        'key',
358 silly resolved        'secret key',
358 silly resolved        'hash',
358 silly resolved        'verify' ],
358 silly resolved     author:
358 silly resolved      { name: 'Barry Steyn',
358 silly resolved        email: 'barry.steyn@gmail.com',
358 silly resolved        url: 'http://doctrina.org' },
358 silly resolved     engines: { node: '>= 0.10' },
358 silly resolved     repository:
358 silly resolved      { type: 'git',
358 silly resolved        url: 'https://github.com/barrysteyn/node-scrypt.git' },
358 silly resolved     devDependencies: { tap: '*' },
358 silly resolved     dependencies: { nan: '^1.6.2' },
358 silly resolved     licenses: [ [Object] ],
358 silly resolved     bugs: { url: 'https://github.com/barrysteyn/node-scrypt/issues' },
358 silly resolved     scripts:
358 silly resolved      { test: 'npm install && node tests/scrypt-tests.js',
358 silly resolved        install: 'node-gyp rebuild' },
358 silly resolved     gypfile: true,
358 silly resolved     readme: '# Scrypt For Node/IO\n\n[![Build Status](https://travis-ci.org/barrysteyn/node-scrypt.png?branch=master)](https://travis-ci.org/barrysteyn/node-scrypt) [![npm version](https://badge.fury.io/js/scrypt.svg)](http://badge.fury.io/js/scrypt)\n\nScrypt for Node/IO is a native node/io C++ wrapper for Colin Percival\'s scrypt utility. \n\nAs should be the case with any security tool, this library should be scrutinized by anyone using it. If you find or suspect an issue with the code- please bring it to my attention and I\'ll spend some time trying to make sure that this tool is as secure as possible.\n\n# News And Updates\n\n## Node-Scrypt Version 4\nFully compatible with Node versions 0.10x and up and IO. Library rewritten using [nan](https://github.com/rvagg/nan).\n\n## Node-Scrypt Version 3\nVersion 3\'s main highlight is support for the **Microsoft Windows** platform.\n\n### Node-Scrypt Version 2\nNode-Scrypt version 2.0 is a complete rewrite of the previous module. It\'s main highlights are:\n\n * Access to the underlying key derivation function\n * Extensive use of node\'s buffers\n * Easy configuration\n * Removal of scrypt encryption/decryption (this will soon be moved to another module)\n\nThe module consists of four functions:\n\n 1. [params](#params) - a translation function that produces scrypt parameters\n 2. [hash](#hash) - produces a 256 bit hash using scrypt\'s key derivation function\n 3. [verify](#verify) - verify\'s a hash produced by this module\n 4. [kdf](#key-derivation-function) - scrypt\'s underlying key dervivation function\n\nIt also consists of four extra functions that provide [backward compatibility](#backward-compatibility-for-users-of-version-1x) to the previous version.\n\n## Table Of Contents\n\n * [Scrypt](#scrypt)\n * [Installation Instructions](#installation-instructions)\n * [API](#api)\n * [Example Usage](#example-usage)\n * [FAQ](#faq)\n * [Credits](#credits)\n\n## Scrypt\nScrypt is an advanced crypto library used mainly for [key derivation](http://en.wikipedia.org/wiki/Key_derivation_function): More information can be found here:\n\n* [Tarsnap blurb about scrypt](http://www.tarsnap.com/scrypt.html) - Colin Percival (the author of scrypt) explains a bit about it.\n* [Academic paper explaining scrypt](http://www.tarsnap.com/scrypt/scrypt.pdf).\n* [Wikipedia Article on scrypt](http://en.wikipedia.org/wiki/Scrypt).\n\n## Installation Instructions\n\n### Windows\n\n#### Node-Gyp\n\nTo install node-gyp for windows, refer to the [windows specific install instructions](https://github.com/TooTallNate/node-gyp#installation) of the node-gyp documentation (also look [here](https://github.com/TooTallNate/node-gyp/wiki/Visual-Studio-2010-Setup) for helpful hints).\n\n#### OpenSSL\nIt is very important that OpenSSL for windows be installed:\n\n * [OpenSSL For Windows 32 bit](http://slproweb.com/download/Win32OpenSSL-1_0_2.exe)\n * [OpenSSL For Windows 64 bit](http://slproweb.com/download/Win64OpenSSL-1_0_2.exe)\n  \n### Posix Environment Prerequisites (Linux, Mac etc)\n\n#### Node-Gyp\n[Node-gyp](https://github.com/TooTallNate/node-gyp) is needed to build this module. It should be installed globally, that is, with the `-g` switch:\n\n\tnpm install -g node-gyp\n\n### From NPM\n\n    npm install scrypt\n\n### From Source\n\n    git clone https://github.com/barrysteyn/node-scrypt.git\n    cd node-scrypt\n    npm install\n    node-gyp configure build\n\n### Testing\nTo test, go to the folder where scrypt was installed, and type:\n\n    npm test\n\n#### Encodings\nThe following encodings are accepted:\n\n 1. **ascii**\n 2. **utf8**\n 3. **base64**\n 4. **ucs2** \n 5. **binary**\n 6. **hex**\n 7. **buffer**\n\nThe last encoding is node\'s [Buffer](http://nodejs.org/api/buffer.html) object. Buffer is useful for representing raw binary data and has the ability to translate into any of the encodings mentioned above. It is for these reasons that encodings default to buffer in this module.\n\n### Params\nThe [params function](#params-1) translates human understandable parameters to scrypt\'s internal parameters. \n\nThe human understandable parameters are as follows:\n\n 1. **maxtime**: the maximum amount of time scrypt will spend when computing the derived key.\n 2. **maxmemfrac**: the maximum fraction of the available RAM used when computing the derived key.\n 3. **maxmem**: the maximum number of bytes of RAM used when computing the derived encryption key. \n\nScrypt\'s internal parameters are as follows:\n\n 1. **N** - general work factor, iteration count.\n 2. **r** - blocksize in use for underlying hash; fine-tunes the relative memory-cost.\n 3. **p** - parallelization factor; fine-tunes the relative cpu-cost.\n\nFor info on what the above parameters do, read [section 5 of the scrypt ietf draft](http://tools.ietf.org/html/draft-josefsson-scrypt-kdf-01#section-5).\n\n#### How Memory Is Calculated\n`maxmem` is often defaulted to `0`. This does not mean that `0` RAM is used. Instead, memory used is calculated like so (quote from Colin Percival):\n\n> the system [will use] the amount of RAM which [is] specified [as the] fraction of the available RAM, but no more than maxmem, and no less than 1MiB\n\nTherefore at the very least, 1MiB of ram will be used.\n\n### Hash\nThe [hash function](#hash-1) does the following:\n\n * Adds random salt.\n * Creates a HMAC to protect against active attack.\n * Uses the scrypt key derivation function to derive a hash for a key.\n\n#### Hash Format\nAll hashes start with the word *"scrypt"*. Next comes the scrypt parameters used in the key derivation function, followed by random salt. Finally, a 256 bit HMAC of previous content is appended, with the key for the HMAC being produced by the scrypt key derivation function. The result is a 768 bit (96 byte) output:\n\n 1. **bytes 0-5**: The word *"scrypt"*\n 2. **bytes 6-15**: Scrypt parameters N, r, and p\n 3. **bytes 16-47**: 32 bits of random salt\n 4. **bytes 48-63**: A 16 bit checksum\n 5. **bytes 64-95**: A 32 bit HMAC of bytes 0 to 63 using a key produced by the scrypt key derivation function.\n\nBytes 0 to 63 are left in plaintext. This is necessary as these bytes contain metadata needed for verifying the hash. This information not being encrypted does not mean that security is weakened. What is essential in terms of security is hash **integrity** (meaning that no part of the hashed output can be changed) and that the original password cannot be determined from the hashed output (this is why you are using scrypt - because it does this in a good way). Bytes 64 to 95 is where all this happens.\n\n### Verify\nThe [verify function](#verify-1) determines whether a hash can be derived from a given key and returns a boolean result.\n\n### Key Derivation Function\nThe underlying [scrypt key derivation function](#kdf). This functionality is exposed for users who are quite experienced and need the function for business logic. A good example is [litecoin](https://litecoin.org/) which uses the scrypt key derivation function as a proof of work. The key derivation function in this module is tested against [three of the four test vectors](http://tools.ietf.org/html/draft-josefsson-scrypt-kdf-00#page-11) in the original scrypt paper. The fourth test vector takes too long to computer and is infeasible to use as testing for continuous integration. Nevertheless, it is included in the tests, but commented out - uncomment it and run the tests, but be warned that it is rather taxing on resources.\n\n#### Use Hash To Store Keys\nIf your interested in this module is to produce hashes to store passwords, then I strongly encourage you to use the hash function. The key derivation function does not produce any [message authentication code](http://en.wikipedia.org/wiki/Message_authentication_code) to ensure integrity. You will also have to store the scrypt parameters separately. Lastly, there is no native verify function included in this module.\n\nIn short: If you are going to use this module to store keys, then use the hash function. It has been customized for general key storage and is both easier to use and provides better protection compared to the key derivation function.\n\n### Backward Compatibility For User\'s Of Version 1.x\nFour extra functions are provided for means of backward compatibility:\n\n 1. [passwordHash](#passwordhash)\n 2. [passwordHashSync](#passwordhashsync)\n 3. [verifyHash](#verifyhash)\n 4. [verifyHashSync](#verifyhashsync)\n\nThe above functions are defaulted to behave exactly like the previous version.\n\n## API\n##### A Note On Error Synchronous Handling\nAll synchronous functionality should be wrapped in a `try ... catch` as exceptions are thrown in case of error. For asynchronous functionality, error are returned as the first argument to the callback function if such an error exists. An error is an object with both an error code and a message describing the error.\n\n##### A Note On Error Asynchronous Handling\nFor asynchronous functionality, an error is thrown if the error is a programmer error. For more information about different error types, see [this](https://www.joyent.com/developers/node/design/errors#) article. For example, specifying the `hashEncoding` for verify that is different to the actual hash\'s encoding will throw an error. \n\nOn a successful result, the err object of the callback function will be `null` (not `undefined`).\n\n##### Scrypt Parameter Object\nThe scrypt parameter object is a JSON object that must have values for properties **N**, **r** and **p**. For example, it could look like this:\n\n    {\n      N: 1,\n      r: 1,\n      p: 1\n    }\n\n### Params\n`params(maxtime, maxmem, maxmemfrac, callback_function)`\n\n * `maxtime` - [REQUIRED] - a decimal (double) representing the maxtime in seconds for running scrypt. \n * `maxmem` - [OPTIONAL] - an integer, specifying the maximum number of bytes\n * `maxmemfrac` - [OPTIONAL] - a double value between 0.0 and 1.0, representing a normalized percentage value\n * `callback_function` - [OPTIONAL] - if present, will make this function asynchronous\n\n#### Params Config Object\nThe params config object is accessible from `scrypt.params.config`. It has the following default value:\n\n    {\n     maxmem: 0,\n     maxmemfrac: 0.5\n    }\n\n  * `maxmem` - an integer representing the default value maxmem is set to if not explicitly defined in the function call\n  * `maxmemfrac` - a double representing the default value maxmemfrac is set to if not explicitly defined in the function call\n\nRead the section on [how memory is calculated](#how-memory-is-calculated) to get a better understanding of these values.\n\nThe return value will be a [scrypt parameter object](#scrypt-parameter-object)\n\n### Hash\n`hash(key, scrypt_parameters, callback_function)`\n\n * `key` - [REQUIRED] - an [encoded string or buffer](#encodings) representing the key to be hashed\n * `scrypt_parameters` - [REQUIRED] - a JSON object representing the [scrypt\'s internal parameters](#params)\n * `callback_function` - [OPTIONAL] - if present, will make this function asynchronous\n\n#### Hash Config Object\nThe hash config object is accessible from `scrypt.hash.config`. It has the following default value:\n\n    {\n     keyEncoding: \'buffer\', \n     outputEncoding: \'buffer\'\n    }\n\n * `keyEncoding` - a string representing the [encoding](#encodings) of the input key\n * `outputEncoding` - a string representing the [encoding](#encodings) of the output returned to the user\n\nThe return value will be an [encoded string or buffer](#encodings) of the [hash format](#hash-format).\n\n### Verify\n`verify(hash, key, callback_function)`\n\n * `hash` - [REQUIRED] - an [encoded string or buffer](#encodings) of the output of the hash function\n * `key` - [REQUIRED] - an [encoded string or buffer](#encodings) representing the key to be hashed\n * `callback_function` - [OPTIONAL] - if present, will make this function asynchronous\n\n#### Verify Config Object\nThe verify config object is accessible from `scrypt.verify.config`. It has the following default value:\n\n    {\n     hashEncoding: \'buffer\', \n     keyEncoding: \'buffer\'\n    }\n\n * `hashEncoding` - a string representing the [encoding](#encodings) of the input hash\n * `keyEncoding` - a string representing the [encoding](#encodings) of the input key\n\nThe return value will be a `boolean` representing if the hash can be derived from the key\n\n### KDF\n`kdf(key, scrypt_parameters, outputLength, salt, callback_function)`\n\n * `key` - [REQUIRED] - an [encoded string or buffer](#encodings) representing the key to be hashed\n * `scrypt_parameters` - [REQUIRED] - a JSON object representing the [scrypt\'s internal parameters](#params)\n * `outputLength` - [OPTIONAL] - an integer, representing the size in bytes of the output\n * `salt` - [OPTIONAL] - an [encoded string or buffer](#encodings) representing the value used for salt. If not defined, a random salt will be created.\n * `callback_function` - [OPTIONAL] - if present, will make this function asynchronous\n\nThe return value will be a JSON object with the following properties:\n\n 1. **hash** - the resulting scrypt KDF hash\n 2. **salt** - the salt used to make the hash\n\n#### KDF Config Object\nThe kdf config object is accessible from `scrypt.kdf.config`. It has the following default value:\n\n    { \n     saltEncoding: \'buffer\',\n     keyEncoding: \'buffer\',\n     outputEncoding: \'buffer\',\n     defaultSaltSize: 32,\n     outputLength: 64 \n    }\n \n * `saltEncoding` - a string representing the [encoding](#encodings) of the input salt\n * `keyEncoding` - a string representing the [encoding](#encodings) of the input key\n * `outputEncoding` - a string representing the [encoding](#encodings) of the output returned to the user\n * `defaultSaltSize` - an integer representing the number of bytes used to create a random salt should it be necessary\n * `outputLength` - an integer representing the size of the output in bytes\n\n\n### Backward Compatibility\n#### PasswordHash\n`passwordHash(key, maxtime, maxmem, maxmemfrac, callback_function)`\n\n * `key` - [REQUIRED] - a key string.\n * `maxtime` - [REQUIRED] - a decimal (double) representing the maxtime in seconds for running scrypt. Use 0.1 (100 milliseconds) for interactive login.\n * `maxmem` - [OPTIONAL] - instructs scrypt to use the specified number of bytes of RAM (default 0).\n * `maxmemfrac` - [OPTIONAL] - instructs scrypt to use the specified fraction of RAM (defaults 0.5).\n * `callback_function` - [Optional] - a callback function that will handle processing when result is ready. If this argument is not present, the function will behave in a synchronous manner like the function below.\n\n#### PasswordHashSync\n`passwordHashSync(key, maxtime, maxmem, maxmemfrac)`\n\n * `key` - [REQUIRED] - a password string.\n * `maxtime` - [REQUIRED] - a decimal (double) representing the maxtime in seconds for running scrypt. Use 0.1 (100 milliseconds) for interactive logins.\n * `maxmem` - [OPTIONAL] - instructs scrypt to use the specified number of bytes of RAM (default 0).\n * `maxmemfrac` - [OPTIONAL] - instructs scrypt to use the specified fracion of RAM (defaults 0.5).\n\n#### verifyHash\n`verifyHash(hash, key, callback_function)` \n\n * `hash` - [REQUIRED] - the password created with the above `passwordHash` function.\n * `key` - [REQUIRED] - a password string.\n * `callback_function` - [OPTIONAL] - a callback function that will handle processing when result is ready. If this argument is not present, the function will behave in a synchronous manner like the function below\n\n#### verifyHashSync\n`verifyHashSync(hash, password)`\n\n * `hash` - [REQUIRED] - the password created with the above `passwordHash` function.\n * `password` - [REQUIRED] - a password string.\n\n# Example Usage\n## params\n\n    var scrypt = require("scrypt");\n\tconsole.log(scrypt.params.config); //Outputs the config object to screen\n\n\t//Synchronous\n\ttry {\n\t\t//Uses 0.1 for maxtime, and the values in the config object for maxmem and maxmemfrac\n\t\tvar scryptParameters = scrypt.params(0.1); \n\t\tconsole.log(scryptParameters);\n\t} catch(err) {\n\t\t\n\t}\n\n\t//Asynchronous\n\tscrypt.params(0.1, function(err, scryptParameters) {\n\t\tconsole.log(scryptParameters);\n\t});\n\n## hash\n\t\n\tvar scrypt = require("scrypt");\n\tvar scryptParameters = scrypt.params(0.1);\n\tvar key = new Buffer("this is a key"); //key defaults to buffer in config, so input must be a buffer\n\n\t//Synchronous example that will output in hexidecimal encoding\n\tscrypt.hash.config.outputEncoding = "hex";\n\tvar hash = scrypt.hash(key, scryptParameters); //should be wrapped in try catch, but leaving it out for brevity\n\tconsole.log("Synchronous result: "+hash);\n\n\t//Asynchronous example that expects key to be ascii encoded\n\tscrypt.hash.config.keyEncoding = "ascii";\n\tscrypt.hash("ascii encoded key", {N: 1, r:1, p:1}, function(err, result){\n\t\t//result will be hex encoded\n\t\t//Note how scrypt parameters was passed as a JSON object\n\t\tconsole.log("Asynchronous result: "+result);\n\t});\n\n## verify\n\n\tvar scrypt = require("scrypt");\n\tvar scryptParameters = scrypt.params(0.1);\n\tscrypt.hash.config.keyEncoding = "ascii";\n\tscrypt.verify.config.keyEncoding = "ascii";\n\tvar hash = scrypt.hash("password", scryptParameters);\n\n\t//Synchronous\n\tscrypt.verify(hash, "password"); //result will be true\n\tscrypt.verify(hash, "incorrect password"); //result will be false\n\n\t//Asynchronous\n\tscrypt.verify(hash, "password", function(err, result) {\n\t\t//result will be true\n\t});\n\n## kdf\nThe [scrypt paper](http://www.tarsnap.com/scrypt/scrypt.pdf) lists four [test vectors](http://tools.ietf.org/html/draft-josefsson-scrypt-kdf-00#page-11) to test implementation. This example will show how to produce these test vectors from within this module.\n\n#### Test Vector 1\n\n\tvar scrypt = require("scrypt");\n    scrypt.kdf.config.saltEncoding = "ascii";\n    var key = new Buffer("");\n\n\t//Synchronous\n    var res = scrypt.kdf(key,{"N":16,"r":1,"p":1},64,"");\n\tconsole.log(res.hash.toString("hex"));\n\n\t//Asynchronous\n    scrypt.kdf(key, {"N":16,"r":1,"p":1},64,"", function(err, res) {\n\t\tconsole.log(res.hash.toString("hex"));\n    });\n\n#### Test Vector 2\n\n\tvar scrypt = require("scrypt");\n    scrypt.kdf.config.keyEncoding = "ascii";\n    var salt = new Buffer("NaCl");\n\n\t//Synchronous\n    var res = scrypt.kdf("password",{"N":1024,"r":8,"p":16},64,salt);\n\tconsole.log(res.hash.toString("hex"));\n\n    scrypt.kdf("password", {"N":1024,"r":8,"p":16},64,salt, function(err, res) {\n\t\tconsole.log(res.hash.toString("hex"));\n    });\n\n\n#### Test Vector 3\n\t\n\tvar scrypt = require("scrypt");\n    scrypt.kdf.config.outputEncoding = "hex";\n    var key = new Buffer("pleaseletmein");\n    var salt = new Buffer("SodiumChloride");\n\n\t//Synchronous\n    var res = scrypt.kdf(key,{"N":16384,"r":8,"p":1},64,salt);\n\tconsole.log(res.hash);\n\n\t//Asynchronous\n    scrypt.kdf(key, {"N":16384,"r":8,"p":1},64,salt, function(err, res) {\n\t\tconsole.log(res.hash);\n    });\n\n\n#### Test Vector 4\nNote: This test vector is very taxing in terms of resources.\n\t\n\tvar scrypt = require("scrypt");\n\tscrypt.kdf.config.saltEncoding = "ascii";\n\tscrypt.kdf.config.keyEncoding = "ascii";\n\n\t//Synchronous\n    var res = scrypt.kdf("pleaseletmein",{"N":1048576,"r":8,"p":1},64,"SodiumChloride");\n\tconsole.log(res.hash.toString("hex"));\n\n\t//Asynchronous\n    scrypt.kdf("pleaseletmein", {"N":1048576,"r":8,"p":1},64,"SodiumChloride", function(err, res) {\n\t\tconsole.log(res.hash.toString("hex"));\n    });\n\n## Backward Compatibility Functions\nThese examples illustrate how to use the backward compatibility functions.\n### Asynchronous Authentication And Verification\nFor interactive authentication, set `maxtime` to `0.1` - 100 milliseconds (although you should ensure that 100 milliseconds on your hardware is sufficiently secure).\n\n#### To create a password hash\n \n    var scrypt = require("scrypt");\n    var password = "This is a password";\n    var maxtime = 0.1;\n\n    scrypt.passwordHash(password, maxtime, function(err, pwdhash) {\n        if (!err) {\n            //pwdhash should now be stored in the database\n        }\n    });\n\nNote: `maxmem` and `maxmemfrac` can also be passed to hash function. If they are not passed, then `maxmem` defaults to `0` and `maxmemfrac` defaults to `0.5`. If these values are to be passed, then they must be passed after `maxtime`  and before the callback function like so:\n    var scrypt = require("scrypt");\n    var password = "This is a password";\n    var maxtime = 0.1;\n    var maxmem = 0, maxmemfrac = 0.5;\n\n    scrypt.passwordHash(password, maxtime, maxmem, maxmemfrac, function(err, pwdhash) {\n        if (!err) {\n            //pwdhash should now be stored in the database\n        }\n    });\n\n#### To verify a password hash\n\n    var scrypt = require("scrypt");\n    var password = "This is a password";\n    var hash; //This should be obtained from the database\n\n    scrypt.verifyHash(hash, password, function(err, result) {\n        if (!err)\n            return result; //Will be True\n        \n        return False;    \n    });\n\n### Synchronous Authentication And Verification\nAgain, for interactive authentication, set `maxtime` to `0.1` - 100 milliseconds. \n\n#### To create a password hash\n \n    var scrypt = require("scrypt");\n    var password = "This is a password";\n    var maxtime = 0.1;\n\n    var hash = scrypt.passwordHashSync(password, maxtime);\n\nNote: `maxmem` and `maxmemfrac` can also be passed to hash function. If they are not passed, then `maxmem` defaults to `0` and `maxmemfrac` defaults to `0.5`. If these values are to be passed, then they must be passed after `maxtime`  and before the callback function like so:\n\n    var scrypt = require("scrypt");\n    var password = "This is a password";\n    var maxtime = 0.1;\n    var maxmem = 0, maxmemfrac = 0.5;\n\n    var hash = scrypt.passwordHashSync(password, maxtime, maxmem, maxmemfrac);\n\n#### To verify a password hash\n\n    var scrypt = require("scrypt");\n    var password = "This is a password";\n    var hash; //This should be obtained from the database\n\n    var result = scrypt.verifyHashSync(hash, password);\n\nNote: There is no error description for the synchronous version. Therefore, if an error occurs, it will just return its result as `false`.\n\n## FAQ\n### General\n#### What Platforms Are Supported?\nThis module supports most posix platforms, as well as Microsoft Windows. It has been tested on the following platforms: **Linux**, **MAC OS**, **SmartOS** (so its ready for Joyent Cloud) and **Microsoft Windows**. It also works on FreeBSD, OpenBSD, SunOS etc.\n\n### Scrypt\n#### Why Use Scrypt?\n\nIt is probably the most advanced key derivation function available. This is is quote taken from a comment in hacker news:\n\n>Passwords hashed with scrypt with sufficiently-high strength values (there are 3 tweakable input numbers) are fundamentally impervious to being cracked. I use the word "fundamental" in the literal sense, here; even if you had the resources of a large country, you would not be able to design any hardware (whether it be GPU hardware, custom-designed hardware, or otherwise) which could crack these hashes. Ever. (For sufficiently-small definitions of "ever". At the very least "within your lifetime"; probably far longer.)\n\n#### What Are The Pros And Cons For Using Scrypt\n##### Pros\n\n* The scrypt algorithm has been published by [IETF](http://en.wikipedia.org/wiki/IETF) as an [Internet Draft](http://en.wikipedia.org/wiki/Internet_Draft) and is thus on track to becoming a standard. See [here](https://tools.ietf.org/html/draft-josefsson-scrypt-kdf-00) for the draft.\n* It is being actively used in production at [Tarsnap](http://www.tarsnap.com/).\n* It is much more secure than bcrypt.\n* It is designed to be future proof against attacks with future (and more advanced) hardware.\n* It is designed to defend against large scale custom hardware attacks.\n* It is production ready.\n* There is a scrypt library for most major scripting languages (Python, Ruby etc). Now this module provides the library for NodeJS :)\n\nI will end this section with a quote from Colin Percival (author of scrypt):\n\n> We estimate that on modern (2009) hardware, if 5 seconds are spent computing a derived key, the cost of a hardware brute-force attack against scrypt is roughly 4000 times greater than the cost of a similar attack against bcrypt (to find the same password), and 20000 times greater than a similar attack against PBKDF2.\n\n##### Cons\nThere is just one con I can think of: It is a relatively new library (only been around since 2009). Cryptographers don\'t really like new libraries for production deployment as it has not been *battle tested*. That being said, it is being actively used in [Tarsnap](http://www.tarsnap.com/) (as mentioned above) and the author is very active.\n\n### Hash\n#### What Are The Essential Properties For Storing Passwords\nStoring passwords requires three essential properties\n\n* The password must not be stored in plaintext. (Therefore it is hashed).\n* The password hash must be salted. (Making a rainbow table attack very difficult to pull off).\n* The salted hash function must not be fast. (If someone does get hold of the salted hashes, their only option will be brute force which will be very slow).\n\nAs an example of how storing passwords can be done badly, take [LinkedIn](http://www.linkedin.com). In 2012, they [came under fire](http://thenextweb.com/socialmedia/2012/06/06/bad-day-for-linkedin-6-5-million-hashed-passwords-reportedly-leaked-change-yours-now/#!rS1HT) for using unsalted hashes to store their passwords. As most commentators at the time were focusing no salt being present, the big picture was missed. In fact, their biggest problem was that they used [sha1](http://en.wikipedia.org/wiki/SHA-1), a very fast hash function.\n\nThis module\'s [hash function](#hash-1) provides all the above properties\n\n#### If random salts are used for each hash, why does each hash start with *c2NyeXB0* when using passwordHash\nAll hashes start with the word *"scrypt"*. The reason for this is because I am sticking to Colin Percival\'s (the creator of scrypt) hash reference implementation whereby he starts off each hash this way. The base64 encoding of the ascii *"scrypt"* is *c2NyeXB0*. Seeing as *passwordHash* defaults it\'s output to base64, every hash produced will start with *c2NyeXB0*. Next is the scrypt parameter. Users of scrypt normally do not change this information once it is settled upon (hence this will also look the same for each hash). \n\nTo illustrate with an example, I have hashed two password: *password1* and *password2*. Their outputs are as follows:\n\n    password1\n    c2NyeXB0AAwAAAAIAAAAAcQ0zwp7QNLklxCn14vB75AYWDIrrT9I/7F9+lVGBfKN/1TH2hs\n    /HboSy1ptzN0YzHJhC7PZIEPQzf2nuoaqVZg8VkKEJlo8/QaH7qjU2VwB\n    \n    password2\n    c2NyeXB0AAwAAAAIAAAAAZ/+bp8gWcTZgEC7YQZeLLyxFeKRRdDkwbaGeFC0NkdUr/YFAWY\n    /UwdOH4i/PxW48fXeXBDOTvGWtS3lLUgzNM0PlJbXhMOGd2bke0PvTSnW\n\nAs one can see from the above example, both hashes start off by looking similar (they both start with *c2NyeXB0AAwAAAAIAAAAA* - as explained above), but after this, things change very rapidly. In fact, I hashed the password *password1* again:\n\n    password1\n    c2NyeXB0AAwAAAAIAAAAATpP+fdQAryDiRmCmcoOrZa2mZ049KdbA/ofTTrATQQ+m\n    0L/gR811d0WQyip6p2skXVEMz2+8U+xGryFu2p0yzfCxYLUrAaIzaZELkN2M6k0\n\nCompare this hash to the one above. Even though they start off looking similar, their outputs are vastly different (even though it is the same password being hashed). This is because of the **random** salt that has been added, ensuring that no two hashes will ever be identical, even if the password that is being hashed is the same.\n\nFor those that are curious or paranoid, please look at how the hash is both [produced](https://github.com/barrysteyn/node-scrypt/blob/master/src/scryptwrapper/hash.c#L37-81) and [verified](https://github.com/barrysteyn/node-scrypt/blob/master/src/scryptwrapper/hash.c#L83-122) (you are going to need some knowledge of the [C language](http://c.learncodethehardway.org/book/) for this). \n\n## Credits\nThe scrypt library is Colin Percival\'s [scrypt](http://www.tarsnap.com/scrypt.html) project. This includes the encryption/decryption functions which are basically just wrappers into this library.\n\nThe password hash and verify functions are also very heavily influenced by the scrypt source code, with most functionality being copied from various placed within scrypt.\n\nSyed Beparey was instrumental in getting the Windows build working, with most of the Windows build based off the work done by Dinesh Shanbhag.\n',
358 silly resolved     readmeFilename: 'Readme.md',
358 silly resolved     homepage: 'https://github.com/barrysteyn/node-scrypt',
358 silly resolved     _id: 'scrypt@4.0.7',
358 silly resolved     dist: { shasum: '1124629682d6d0c6f4d7acdc89e99b6a2c6c64be' },
358 silly resolved     _from: 'scrypt@',
358 silly resolved     _resolved: 'https://registry.npmjs.org/scrypt/-/scrypt-4.0.7.tgz' } ]
359 info install scrypt@4.0.7 into c:\Users\open\desktop\blog-project
360 info installOne scrypt@4.0.7
361 info c:\Users\open\desktop\blog-project\node_modules\scrypt unbuild
362 verbose tar unpack C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package.tgz
363 silly lockFile 53856247-blog-project-node-modules-scrypt tar://c:\Users\open\desktop\blog-project\node_modules\scrypt
364 verbose lock tar://c:\Users\open\desktop\blog-project\node_modules\scrypt C:\Users\open\AppData\Roaming\npm-cache\53856247-blog-project-node-modules-scrypt.lock
365 silly lockFile 7076d4dd-m-cache-scrypt-4-0-7-package-tgz tar://C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package.tgz
366 verbose lock tar://C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package.tgz C:\Users\open\AppData\Roaming\npm-cache\7076d4dd-m-cache-scrypt-4-0-7-package-tgz.lock
367 silly gunzTarPerm modes [ '755', '644' ]
368 silly gunzTarPerm extractEntry package.json
369 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
370 silly gunzTarPerm extractEntry .npmignore
371 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
372 silly gunzTarPerm extractEntry index.js
373 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
374 silly gunzTarPerm extractEntry .travis.yml
375 silly gunzTarPerm modified mode [ '.travis.yml', 438, 420 ]
376 silly gunzTarPerm extractEntry Readme.md
377 silly gunzTarPerm modified mode [ 'Readme.md', 438, 420 ]
378 silly gunzTarPerm extractEntry binding.gyp
379 silly gunzTarPerm modified mode [ 'binding.gyp', 438, 420 ]
380 silly gunzTarPerm extractEntry scrypt/configuration/posix_configuration/Makefile.in
381 silly gunzTarPerm modified mode [ 'scrypt/configuration/posix_configuration/Makefile.in',
381 silly gunzTarPerm   438,
381 silly gunzTarPerm   420 ]
382 silly gunzTarPerm extractEntry scrypt/configuration/posix_configuration/config.aux/depcomp
383 silly gunzTarPerm modified mode [ 'scrypt/configuration/posix_configuration/config.aux/depcomp',
383 silly gunzTarPerm   438,
383 silly gunzTarPerm   420 ]
384 silly gunzTarPerm extractEntry scrypt/configuration/posix_configuration/config.aux/install-sh
385 silly gunzTarPerm modified mode [ 'scrypt/configuration/posix_configuration/config.aux/install-sh',
385 silly gunzTarPerm   438,
385 silly gunzTarPerm   420 ]
386 silly gunzTarPerm extractEntry scrypt/configuration/posix_configuration/config.aux/missing
387 silly gunzTarPerm modified mode [ 'scrypt/configuration/posix_configuration/config.aux/missing',
387 silly gunzTarPerm   438,
387 silly gunzTarPerm   420 ]
388 silly gunzTarPerm extractEntry scrypt/configuration/posix_configuration/config.h.in
389 silly gunzTarPerm modified mode [ 'scrypt/configuration/posix_configuration/config.h.in',
389 silly gunzTarPerm   438,
389 silly gunzTarPerm   420 ]
390 silly gunzTarPerm extractEntry scrypt/configuration/posix_configuration/configure
391 silly gunzTarPerm modified mode [ 'scrypt/configuration/posix_configuration/configure',
391 silly gunzTarPerm   438,
391 silly gunzTarPerm   420 ]
392 silly gunzTarPerm extractEntry scrypt/configuration/posixconfig
393 silly gunzTarPerm modified mode [ 'scrypt/configuration/posixconfig', 438, 420 ]
394 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/README
395 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/README', 438, 420 ]
396 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/crypto_aesctr.c
397 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/crypto_aesctr.c', 438, 420 ]
398 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/crypto_aesctr.h
399 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/crypto_aesctr.h', 438, 420 ]
400 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt-nosse.c
401 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt-nosse.c',
401 silly gunzTarPerm   438,
401 silly gunzTarPerm   420 ]
402 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt-ref.c
403 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt-ref.c',
403 silly gunzTarPerm   438,
403 silly gunzTarPerm   420 ]
404 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt-sse.c
405 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt-sse.c',
405 silly gunzTarPerm   438,
405 silly gunzTarPerm   420 ]
406 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt.h
407 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/crypto_scrypt.h', 438, 420 ]
408 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/sha256.c
409 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/sha256.c', 438, 420 ]
410 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/crypto/sha256.h
411 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/crypto/sha256.h', 438, 420 ]
412 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc.c
413 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc.c', 438, 420 ]
414 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc.h
415 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc.h', 438, 420 ]
416 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc_cpuperf.c
417 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc_cpuperf.c',
417 silly gunzTarPerm   438,
417 silly gunzTarPerm   420 ]
418 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc_cpuperf.h
419 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/scryptenc/scryptenc_cpuperf.h',
419 silly gunzTarPerm   438,
419 silly gunzTarPerm   420 ]
420 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/memlimit.c
421 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/memlimit.c', 438, 420 ]
422 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/memlimit.h
423 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/memlimit.h', 438, 420 ]
424 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/readpass.c
425 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/readpass.c', 438, 420 ]
426 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/readpass.h
427 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/readpass.h', 438, 420 ]
428 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/sysendian.h
429 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/sysendian.h', 438, 420 ]
430 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/warn.c
431 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/warn.c', 438, 420 ]
432 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/lib/util/warn.h
433 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/lib/util/warn.h', 438, 420 ]
434 silly gunzTarPerm extractEntry scrypt/scrypt-1.1.6/scrypt_platform.h
435 silly gunzTarPerm modified mode [ 'scrypt/scrypt-1.1.6/scrypt_platform.h', 438, 420 ]
436 silly gunzTarPerm extractEntry scrypt/win/gettimeofday.c
437 silly gunzTarPerm modified mode [ 'scrypt/win/gettimeofday.c', 438, 420 ]
438 silly gunzTarPerm extractEntry scrypt/win/include/config.h
439 silly gunzTarPerm modified mode [ 'scrypt/win/include/config.h', 438, 420 ]
440 silly gunzTarPerm extractEntry scrypt/win/include/gettimeofday.h
441 silly gunzTarPerm modified mode [ 'scrypt/win/include/gettimeofday.h', 438, 420 ]
442 silly gunzTarPerm extractEntry scrypt/win/include/inttypes.h
443 silly gunzTarPerm modified mode [ 'scrypt/win/include/inttypes.h', 438, 420 ]
444 silly gunzTarPerm extractEntry scrypt/win/include/stdint.h
445 silly gunzTarPerm modified mode [ 'scrypt/win/include/stdint.h', 438, 420 ]
446 silly gunzTarPerm extractEntry scrypt/win/include/sys/mman.h
447 silly gunzTarPerm modified mode [ 'scrypt/win/include/sys/mman.h', 438, 420 ]
448 silly gunzTarPerm extractEntry scrypt/win/include/unistd.h
449 silly gunzTarPerm modified mode [ 'scrypt/win/include/unistd.h', 438, 420 ]
450 silly gunzTarPerm extractEntry scrypt/win/libs/openssl_32/libeay32.lib
451 silly gunzTarPerm modified mode [ 'scrypt/win/libs/openssl_32/libeay32.lib', 438, 420 ]
452 silly gunzTarPerm extractEntry scrypt/win/libs/openssl_64/libeay32.lib
453 silly gunzTarPerm modified mode [ 'scrypt/win/libs/openssl_64/libeay32.lib', 438, 420 ]
454 silly gunzTarPerm extractEntry scrypt/win/memlimit.c
455 silly gunzTarPerm modified mode [ 'scrypt/win/memlimit.c', 438, 420 ]
456 silly gunzTarPerm extractEntry scrypt/win/mman.c
457 silly gunzTarPerm modified mode [ 'scrypt/win/mman.c', 438, 420 ]
458 silly gunzTarPerm extractEntry scrypt_node.cc
459 silly gunzTarPerm modified mode [ 'scrypt_node.cc', 438, 420 ]
460 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_hash.h
461 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_hash.h', 438, 420 ]
462 silly gunzTarPerm extractEntry src/node-boilerplate/common.cc
463 silly gunzTarPerm modified mode [ 'src/node-boilerplate/common.cc', 438, 420 ]
464 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_config_object.cc
465 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_config_object.cc', 438, 420 ]
466 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_config_object.h
467 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_config_object.h', 438, 420 ]
468 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_error.cc
469 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_error.cc', 438, 420 ]
470 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_error.h
471 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_error.h', 438, 420 ]
472 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_hash.cc
473 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_hash.cc', 438, 420 ]
474 silly gunzTarPerm extractEntry src/node-boilerplate/common.h
475 silly gunzTarPerm modified mode [ 'src/node-boilerplate/common.h', 438, 420 ]
476 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_kdf.cc
477 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_kdf.cc', 438, 420 ]
478 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_kdf.h
479 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_kdf.h', 438, 420 ]
480 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_params.cc
481 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_params.cc', 438, 420 ]
482 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_params.h
483 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_params.h', 438, 420 ]
484 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_verify.cc
485 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_verify.cc', 438, 420 ]
486 silly gunzTarPerm extractEntry src/node-boilerplate/scrypt_verify.h
487 silly gunzTarPerm modified mode [ 'src/node-boilerplate/scrypt_verify.h', 438, 420 ]
488 silly gunzTarPerm extractEntry src/scryptwrapper/hash.c
489 silly gunzTarPerm modified mode [ 'src/scryptwrapper/hash.c', 438, 420 ]
490 silly gunzTarPerm extractEntry src/scryptwrapper/hash.h
491 silly gunzTarPerm modified mode [ 'src/scryptwrapper/hash.h', 438, 420 ]
492 silly gunzTarPerm extractEntry src/scryptwrapper/keyderivation.c
493 silly gunzTarPerm modified mode [ 'src/scryptwrapper/keyderivation.c', 438, 420 ]
494 silly gunzTarPerm extractEntry src/scryptwrapper/keyderivation.h
495 silly gunzTarPerm modified mode [ 'src/scryptwrapper/keyderivation.h', 438, 420 ]
496 silly gunzTarPerm extractEntry src/scryptwrapper/pickparams.c
497 silly gunzTarPerm modified mode [ 'src/scryptwrapper/pickparams.c', 438, 420 ]
498 silly gunzTarPerm extractEntry src/scryptwrapper/pickparams.h
499 silly gunzTarPerm modified mode [ 'src/scryptwrapper/pickparams.h', 438, 420 ]
500 silly gunzTarPerm extractEntry src/util/salt.c
501 silly gunzTarPerm modified mode [ 'src/util/salt.c', 438, 420 ]
502 silly gunzTarPerm extractEntry src/util/salt.h
503 silly gunzTarPerm modified mode [ 'src/util/salt.h', 438, 420 ]
504 silly gunzTarPerm extractEntry tests/scrypt-tests.js
505 silly gunzTarPerm modified mode [ 'tests/scrypt-tests.js', 438, 420 ]
506 silly lockFile 53856247-blog-project-node-modules-scrypt tar://c:\Users\open\desktop\blog-project\node_modules\scrypt
507 silly lockFile 53856247-blog-project-node-modules-scrypt tar://c:\Users\open\desktop\blog-project\node_modules\scrypt
508 silly lockFile 7076d4dd-m-cache-scrypt-4-0-7-package-tgz tar://C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package.tgz
509 silly lockFile 7076d4dd-m-cache-scrypt-4-0-7-package-tgz tar://C:\Users\open\AppData\Roaming\npm-cache\scrypt\4.0.7\package.tgz
510 info preinstall scrypt@4.0.7
511 verbose readDependencies using package.json deps
512 verbose readDependencies using package.json deps
513 verbose cache add [ 'nan@^1.6.2', null ]
514 verbose cache add name=undefined spec="nan@^1.6.2" args=["nan@^1.6.2",null]
515 verbose parsed url { protocol: null,
515 verbose parsed url   slashes: null,
515 verbose parsed url   auth: null,
515 verbose parsed url   host: null,
515 verbose parsed url   port: null,
515 verbose parsed url   hostname: null,
515 verbose parsed url   hash: null,
515 verbose parsed url   search: null,
515 verbose parsed url   query: null,
515 verbose parsed url   pathname: 'nan@^1.6.2',
515 verbose parsed url   path: 'nan@^1.6.2',
515 verbose parsed url   href: 'nan@^1.6.2' }
516 verbose cache add name="nan" spec="^1.6.2" args=["nan","^1.6.2"]
517 verbose parsed url { protocol: null,
517 verbose parsed url   slashes: null,
517 verbose parsed url   auth: null,
517 verbose parsed url   host: null,
517 verbose parsed url   port: null,
517 verbose parsed url   hostname: null,
517 verbose parsed url   hash: null,
517 verbose parsed url   search: null,
517 verbose parsed url   query: null,
517 verbose parsed url   pathname: '^1.6.2',
517 verbose parsed url   path: '^1.6.2',
517 verbose parsed url   href: '^1.6.2' }
518 verbose addNamed [ 'nan', '^1.6.2' ]
519 verbose addNamed [ null, '>=1.6.2-0 <2.0.0-0' ]
520 silly lockFile 533577ce-nan-1-6-2 nan@^1.6.2
521 verbose lock nan@^1.6.2 C:\Users\open\AppData\Roaming\npm-cache\533577ce-nan-1-6-2.lock
522 silly addNameRange { name: 'nan', range: '>=1.6.2-0 <2.0.0-0', hasData: false }
523 verbose url raw nan
524 verbose url resolving [ 'https://registry.npmjs.org/', './nan' ]
525 verbose url resolved https://registry.npmjs.org/nan
526 info trying registry request attempt 1 at 18:44:54
527 verbose etag "8OKNOQTK5I3E2DYN4ME7PZ551"
528 http GET https://registry.npmjs.org/nan
529 http 200 https://registry.npmjs.org/nan
530 silly registry.get cb [ 200,
530 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
530 silly registry.get     etag: '"9D70CGL7I2GVSPGK48NI768U9"',
530 silly registry.get     'content-type': 'application/json',
530 silly registry.get     'cache-control': 'max-age=60',
530 silly registry.get     'content-length': '109590',
530 silly registry.get     'accept-ranges': 'bytes',
530 silly registry.get     date: 'Fri, 05 Jun 2015 01:44:49 GMT',
530 silly registry.get     via: '1.1 varnish',
530 silly registry.get     age: '45',
530 silly registry.get     connection: 'keep-alive',
530 silly registry.get     'x-served-by': 'cache-lax1425-LAX',
530 silly registry.get     'x-cache': 'HIT',
530 silly registry.get     'x-cache-hits': '5',
530 silly registry.get     'x-timer': 'S1433468689.464269,VS0,VE0',
530 silly registry.get     vary: 'Accept' } ]
531 silly addNameRange number 2 { name: 'nan', range: '>=1.6.2-0 <2.0.0-0', hasData: true }
532 silly addNameRange versions [ 'nan',
532 silly addNameRange   [ '0.3.0-wip',
532 silly addNameRange     '0.3.0-wip2',
532 silly addNameRange     '0.3.0',
532 silly addNameRange     '0.3.1',
532 silly addNameRange     '0.3.2',
532 silly addNameRange     '0.4.0',
532 silly addNameRange     '0.4.1',
532 silly addNameRange     '0.4.2',
532 silly addNameRange     '0.4.3',
532 silly addNameRange     '0.4.4',
532 silly addNameRange     '0.5.0',
532 silly addNameRange     '0.5.1',
532 silly addNameRange     '0.5.2',
532 silly addNameRange     '0.6.0',
532 silly addNameRange     '0.7.0',
532 silly addNameRange     '0.7.1',
532 silly addNameRange     '0.8.0',
532 silly addNameRange     '1.0.0',
532 silly addNameRange     '1.1.0',
532 silly addNameRange     '1.1.1',
532 silly addNameRange     '1.1.2',
532 silly addNameRange     '1.2.0',
532 silly addNameRange     '1.3.0',
532 silly addNameRange     '1.4.0',
532 silly addNameRange     '1.4.1',
532 silly addNameRange     '1.5.0',
532 silly addNameRange     '1.4.2',
532 silly addNameRange     '1.4.3',
532 silly addNameRange     '1.5.1',
532 silly addNameRange     '1.5.2',
532 silly addNameRange     '1.6.0',
532 silly addNameRange     '1.5.3',
532 silly addNameRange     '1.6.1',
532 silly addNameRange     '1.6.2',
532 silly addNameRange     '1.7.0',
532 silly addNameRange     '1.8.0',
532 silly addNameRange     '1.8.1',
532 silly addNameRange     '1.8.2',
532 silly addNameRange     '1.8.3',
532 silly addNameRange     '1.8.4' ] ]
533 verbose addNamed [ 'nan', '1.8.4' ]
534 verbose addNamed [ '1.8.4', '1.8.4' ]
535 silly lockFile 86d5700b-nan-1-8-4 nan@1.8.4
536 verbose lock nan@1.8.4 C:\Users\open\AppData\Roaming\npm-cache\86d5700b-nan-1-8-4.lock
537 silly lockFile 86d5700b-nan-1-8-4 nan@1.8.4
538 silly lockFile 86d5700b-nan-1-8-4 nan@1.8.4
539 silly lockFile 533577ce-nan-1-6-2 nan@^1.6.2
540 silly lockFile 533577ce-nan-1-6-2 nan@^1.6.2
541 silly resolved [ { name: 'nan',
541 silly resolved     version: '1.8.4',
541 silly resolved     description: 'Native Abstractions for Node.js: C++ header for Node 0.8->0.12 compatibility',
541 silly resolved     main: 'include_dirs.js',
541 silly resolved     repository: { type: 'git', url: 'git://github.com/iojs/nan.git' },
541 silly resolved     scripts:
541 silly resolved      { test: 'tap --gc test/js/*-test.js',
541 silly resolved        'rebuild-tests': 'pangyp rebuild --directory test' },
541 silly resolved     contributors:
541 silly resolved      [ [Object],
541 silly resolved        [Object],
541 silly resolved        [Object],
541 silly resolved        [Object],
541 silly resolved        [Object],
541 silly resolved        [Object],
541 silly resolved        [Object] ],
541 silly resolved     devDependencies:
541 silly resolved      { bindings: '~1.2.1',
541 silly resolved        'node-gyp': '~1.0.2',
541 silly resolved        pangyp: '~2.0.1',
541 silly resolved        tap: '~0.7.1',
541 silly resolved        xtend: '~4.0.0' },
541 silly resolved     license: 'MIT',
541 silly resolved     readme: 'Native Abstractions for Node.js\n===============================\n\n**A header file filled with macro and utility goodness for making add-on development for Node.js easier across versions 0.8, 0.10 and 0.12 as well as io.js.**\n\n***Current version: 1.8.4***\n\n*(See [CHANGELOG.md](https://github.com/iojs/nan/blob/master/CHANGELOG.md) for complete ChangeLog)*\n\n[![NPM](https://nodei.co/npm/nan.png?downloads=true&downloadRank=true)](https://nodei.co/npm/nan/) [![NPM](https://nodei.co/npm-dl/nan.png?months=6&height=3)](https://nodei.co/npm/nan/)\n\n[![Build Status](https://api.travis-ci.org/iojs/nan.svg?branch=master)](http://travis-ci.org/iojs/nan)\n[![Build status](https://ci.appveyor.com/api/projects/status/kh73pbm9dsju7fgh)](https://ci.appveyor.com/project/RodVagg/nan)\n\nThanks to the crazy changes in V8 (and some in Node core), keeping native addons compiling happily across versions, particularly 0.10 to 0.12, is a minor nightmare. The goal of this project is to store all logic necessary to develop native Node.js addons without having to inspect `NODE_MODULE_VERSION` and get yourself into a macro-tangle.\n\nThis project also contains some helper utilities that make addon development a bit more pleasant.\n\n * **[News & Updates](#news)**\n * **[Usage](#usage)**\n * **[Example](#example)**\n * **[API](#api)**\n * **[Tests](#tests)**\n * **[Porting](#porting)**\n * **[Governance & Contributing](#governance)**\n\n<a name="news"></a>\n## News & Updates\n\n### Apr-2015: 1.8.0 release\n\n* Support V8 4.2\n* Removed support for creating `Signature`s with arguments\n* Backported thread local storage routines for libuv\n\n### Feb-2015: 1.7.0 release\n\n* Made `NanCallback::Call` accept optional target\n* Support atom-shell 0.21\n\nNode 0.12.0 is out and supported by NAN. So is atom-shell 0.21. `NanCallback::Call` now accepts an optional `target` argument like `NanMakeCallback`.\n\n### Jan-2015: 1.6.0 release\n\n* Deprecated `NanNewContextHandle` in favor of `NanNew<Context>`\n* Added `NanSetCounterFunction`, `NanSetCreateHistogramFunction`, `NanSetAddHistogramSampleFunction`\n* Added `NanIdleNotification`, `NanLowMemoryNotification`, `NanContextDisposedNotification`\n* Added `NanEncode`, `NanDecodeBytes` and `NanDecodeWrite`\n\n### Jan-2015: 1.5.0 release\n\n* Support [io.js](https://github.com/iojs/io.js) thanks to [Ben Noordhuis](bnoordhuis)\n* Rewritten NanNew internals thanks to [David Siegel](agnat)\n* NanAsyncWorker now supports progress reporting thanks to [Brett Lawson](brett19)\n\n### Aug-2014: 1.3.0 release\n\n* `NanCString()` and `NanRawString()` have been deprecated in favour of new <a href="#api_nan_ascii_string"><b><code>NanAsciiString</code></b></a>, <a href="#api_nan_utf8_string"><b><code>NanUtf8String</code></b></a> and <a href="#api_nan_ucs2_string"><b><code>NanUcs2String</code></b></a>. These classes manage the underlying memory for you in a safer way than just handing off an allocated array. You should now `*NanAsciiString(handle)` to access the raw `char` data, you can also allocate on the heap if you need to keep a reference.\n* Two more <a href="#api_nan_make_callback"><b><code>NanMakeCallback</code></b></a> overloads have been added to for parity with Node core.\n* You can now `NanNew(std::string)` (use `NanNew<std::string&>(std::string&)` to pass by reference)\n* <a href="#api_nan_set_template"><b><code>NanSetTemplate</code></b></a>, <a href="#api_nan_set_prototype_template"><b><code>NanSetPrototypeTemplate</code></b></a> and <a href="#api_nan_set_instance_template"><b><code>NanSetInstanceTemplate</code></b></a> have been added.\n\n### May-2014: 1.1.0 release\n\n* We\'ve deprecated `NanSymbol()`, you should just use `NanNew<String>()` now.\n* `NanNull()`, `NanUndefined()`, `NanTrue()`, `NanFalse()` all return `Local`s now.\n* `nan_isolate` is gone, it was intended to be internal-only but if you were using it then you should switch to `v8::Isolate::GetCurrent()`.\n* `NanNew()` has received some additional overload-love so you should be able to give it many kinds of values without specifying the `<Type>`.\n* Lots of small fixes and additions to expand the V8 API coverage, *use the source, Luke*.\n\n\n### May-2014: Major changes for V8 3.25 / Node 0.11.13\n\nNode 0.11.11 and 0.11.12 were both broken releases for native add-ons, you simply can\'t properly compile against either of them for different reasons. But we now have a 0.11.13 release that jumps a couple of versions of V8 ahead and includes some more, major (traumatic) API changes.\n\nBecause we are now nearing Node 0.12 and estimate that the version of V8 we are using in Node 0.11.13 will be close to the API we get for 0.12, we have taken the opportunity to not only *fix* NAN for 0.11.13 but make some major changes to improve the NAN API.\n\nWe have **removed support for Node 0.11 versions prior to 0.11.13**. As usual, our tests are run against (and pass) the last 5 versions of Node 0.8 and Node 0.10. We also include Node 0.11.13 obviously.\n\nThe major change is something that [Benjamin Byholm](kkoopa) has put many hours in to. We now have a fantastic new `NanNew<T>(args)` interface for creating new `Local`s, this replaces `NanNewLocal()` and much more. If you look in [./nan.h](nan.h) you\'ll see a large number of overloaded versions of this method. In general you should be able to `NanNew<Type>(arguments)` for any type you want to make a `Local` from. This includes `Persistent` types, so we now have a `Local<T> NanNew(const Persistent<T> arg)` to replace `NanPersistentToLocal()`.\n\nWe also now have `NanUndefined()`, `NanNull()`, `NanTrue()` and `NanFalse()`. Mainly because of the new requirement for an `Isolate` argument for each of the native V8 versions of this.\n\nV8 has now introduced an `EscapableHandleScope` from which you `scope.Escape(Local<T> value)` to *return* a value from a one scope to another. This replaces the standard `HandleScope` and `scope.Close(Local<T> value)`, although `HandleScope` still exists for when you don\'t need to return a handle to the caller. For NAN we are exposing it as `NanEscapableScope()` and `NanEscapeScope()`, while `NanScope()` is still how you create a new scope that doesn\'t need to return handles. For older versions of Node/V8, it\'ll still map to the older `HandleScope` functionality.\n\n`NanFromV8String()` was deprecated and has now been removed. You should use `NanCString()` or `NanRawString()` instead.\n\nBecause `node::MakeCallback()` now takes an `Isolate`, and because it doesn\'t exist in older versions of Node, we\'ve introduced `NanMakeCallback()`. You should *always* use this when calling a JavaScript function from C++.\n\nThere\'s lots more, check out the Changelog in nan.h or look through [#86](https://github.com/iojs/nan/pull/86) for all the gory details.\n\n### Dec-2013: NanCString and NanRawString\n\nTwo new functions have been introduced to replace the functionality that\'s been provided by `NanFromV8String` until now. NanCString has sensible defaults so it\'s super easy to fetch a null-terminated c-style string out of a `v8::String`. `NanFromV8String` is still around and has defaults that allow you to pass a single handle to fetch a `char*` while `NanRawString` requires a little more attention to arguments.\n\n### Nov-2013: Node 0.11.9+ breaking V8 change\n\nThe version of V8 that\'s shipping with Node 0.11.9+ has changed the signature for new `Local`s to: `v8::Local<T>::New(isolate, value)`, i.e. introducing the `isolate` argument and therefore breaking all new `Local` declarations for previous versions. NAN 0.6+ now includes a `NanNewLocal<T>(value)` that can be used in place to work around this incompatibility and maintain compatibility with 0.8->0.11.9+ (minus a few early 0.11 releases).\n\nFor example, if you wanted to return a `null` on a callback you will have to change the argument from `v8::Local<v8::Value>::New(v8::Null())` to `NanNewLocal<v8::Value>(v8::Null())`.\n\n### Nov-2013: Change to binding.gyp `"include_dirs"` for NAN\n\nInclusion of NAN in a project\'s binding.gyp is now greatly simplified. You can now just use `"<!(node -e \\"require(\'nan\')\\")"` in your `"include_dirs"`, see example below (note Windows needs the quoting around `require` to be just right: `"require(\'nan\')"` with appropriate `\\` escaping).\n\n<a name="usage"></a>\n## Usage\n\nSimply add **NAN** as a dependency in the *package.json* of your Node addon:\n\n``` bash\n$ npm install --save nan\n```\n\nPull in the path to **NAN** in your *binding.gyp* so that you can use `#include <nan.h>` in your *.cpp* files:\n\n``` python\n"include_dirs" : [\n    "<!(node -e \\"require(\'nan\')\\")"\n]\n```\n\nThis works like a `-I<path-to-NAN>` when compiling your addon.\n\n<a name="example"></a>\n## Example\n\nSee **[LevelDOWN](https://github.com/rvagg/node-leveldown/pull/48)** for a full example of **NAN** in use.\n\nFor a simpler example, see the **[async pi estimation example](https://github.com/iojs/nan/tree/master/examples/async_pi_estimate)** in the examples directory for full code and an explanation of what this Monte Carlo Pi estimation example does. Below are just some parts of the full example that illustrate the use of **NAN**.\n\nFor another example, see **[nan-example-eol](https://github.com/CodeCharmLtd/nan-example-eol)**. It shows newline detection implemented as a native addon.\n\nCompare to the current 0.10 version of this example, found in the [node-addon-examples](https://github.com/iojs/node-addon-examples/tree/master/9_async_work) repository and also a 0.11 version of the same found [here](https://github.com/kkoopa/node-addon-examples/tree/5c01f58fc993377a567812597e54a83af69686d7/9_async_work).\n\nNote that there is no embedded version sniffing going on here and also the async work is made much simpler, see below for details on the `NanAsyncWorker` class.\n\n```c++\n// addon.cc\n#include <node.h>\n#include <nan.h>\n// ...\n\nusing v8::FunctionTemplate;\nusing v8::Handle;\nusing v8::Object;\nusing v8::String;\n\nvoid InitAll(Handle<Object> exports) {\n  exports->Set(NanNew<String>("calculateSync"),\n    NanNew<FunctionTemplate>(CalculateSync)->GetFunction());\n\n  exports->Set(NanNew<String>("calculateAsync"),\n    NanNew<FunctionTemplate>(CalculateAsync)->GetFunction());\n}\n\nNODE_MODULE(addon, InitAll)\n```\n\n```c++\n// sync.h\n#include <node.h>\n#include <nan.h>\n\nNAN_METHOD(CalculateSync);\n```\n\n```c++\n// sync.cc\n#include <node.h>\n#include <nan.h>\n#include "./sync.h"\n// ...\n\nusing v8::Number;\n\n// Simple synchronous access to the `Estimate()` function\nNAN_METHOD(CalculateSync) {\n  NanScope();\n\n  // expect a number as the first argument\n  int points = args[0]->Uint32Value();\n  double est = Estimate(points);\n\n  NanReturnValue(NanNew<Number>(est));\n}\n```\n\n```c++\n// async.h\n#include <node.h>\n#include <nan.h>\n\nNAN_METHOD(CalculateAsync);\n```\n\n```c++\n// async.cc\n#include <node.h>\n#include <nan.h>\n#include "./async.h"\n\n// ...\n\nusing v8::Function;\nusing v8::Local;\nusing v8::Null;\nusing v8::Number;\nusing v8::Value;\n\nclass PiWorker : public NanAsyncWorker {\n public:\n  PiWorker(NanCallback *callback, int points)\n    : NanAsyncWorker(callback), points(points) {}\n  ~PiWorker() {}\n\n  // Executed inside the worker-thread.\n  // It is not safe to access V8, or V8 data structures\n  // here, so everything we need for input and output\n  // should go on `this`.\n  void Execute () {\n    estimate = Estimate(points);\n  }\n\n  // Executed when the async work is complete\n  // this function will be run inside the main event loop\n  // so it is safe to use V8 again\n  void HandleOKCallback () {\n    NanScope();\n\n    Local<Value> argv[] = {\n        NanNull()\n      , NanNew<Number>(estimate)\n    };\n\n    callback->Call(2, argv);\n  };\n\n private:\n  int points;\n  double estimate;\n};\n\n// Asynchronous access to the `Estimate()` function\nNAN_METHOD(CalculateAsync) {\n  NanScope();\n\n  int points = args[0]->Uint32Value();\n  NanCallback *callback = new NanCallback(args[1].As<Function>());\n\n  NanAsyncQueueWorker(new PiWorker(callback, points));\n  NanReturnUndefined();\n}\n```\n\n<a name="api"></a>\n## API\n\n * <a href="#api_nan_method"><b><code>NAN_METHOD</code></b></a>\n * <a href="#api_nan_getter"><b><code>NAN_GETTER</code></b></a>\n * <a href="#api_nan_setter"><b><code>NAN_SETTER</code></b></a>\n * <a href="#api_nan_property_getter"><b><code>NAN_PROPERTY_GETTER</code></b></a>\n * <a href="#api_nan_property_setter"><b><code>NAN_PROPERTY_SETTER</code></b></a>\n * <a href="#api_nan_property_enumerator"><b><code>NAN_PROPERTY_ENUMERATOR</code></b></a>\n * <a href="#api_nan_property_deleter"><b><code>NAN_PROPERTY_DELETER</code></b></a>\n * <a href="#api_nan_property_query"><b><code>NAN_PROPERTY_QUERY</code></b></a>\n * <a href="#api_nan_index_getter"><b><code>NAN_INDEX_GETTER</code></b></a>\n * <a href="#api_nan_index_setter"><b><code>NAN_INDEX_SETTER</code></b></a>\n * <a href="#api_nan_index_enumerator"><b><code>NAN_INDEX_ENUMERATOR</code></b></a>\n * <a href="#api_nan_index_deleter"><b><code>NAN_INDEX_DELETER</code></b></a>\n * <a href="#api_nan_index_query"><b><code>NAN_INDEX_QUERY</code></b></a>\n * <a href="#api_nan_gc_callback"><b><code>NAN_GC_CALLBACK</code></b></a>\n * <a href="#api_nan_weak_callback"><b><code>NAN_WEAK_CALLBACK</code></b></a>\n * <a href="#api_nan_deprecated"><b><code>NAN_DEPRECATED</code></b></a>\n * <a href="#api_nan_inline"><b><code>NAN_INLINE</code></b></a>\n * <a href="#api_nan_new"><b><code>NanNew</code></b></a>\n * <a href="#api_nan_undefined"><b><code>NanUndefined</code></b></a>\n * <a href="#api_nan_null"><b><code>NanNull</code></b></a>\n * <a href="#api_nan_true"><b><code>NanTrue</code></b></a>\n * <a href="#api_nan_false"><b><code>NanFalse</code></b></a>\n * <a href="#api_nan_return_value"><b><code>NanReturnValue</code></b></a>\n * <a href="#api_nan_return_undefined"><b><code>NanReturnUndefined</code></b></a>\n * <a href="#api_nan_return_null"><b><code>NanReturnNull</code></b></a>\n * <a href="#api_nan_return_empty_string"><b><code>NanReturnEmptyString</code></b></a>\n * <a href="#api_nan_return_this"><b><code>NanReturnThis</code></b></a>\n * <a href="#api_nan_return_holder"><b><code>NanReturnHolder</code></b></a>\n * <a href="#api_nan_scope"><b><code>NanScope</code></b></a>\n * <a href="#api_nan_escapable_scope"><b><code>NanEscapableScope</code></b></a>\n * <a href="#api_nan_escape_scope"><b><code>NanEscapeScope</code></b></a>\n * <a href="#api_nan_locker"><b><code>NanLocker</code></b></a>\n * <a href="#api_nan_unlocker"><b><code>NanUnlocker</code></b></a>\n * <a href="#api_nan_get_internal_field_pointer"><b><code>NanGetInternalFieldPointer</code></b></a>\n * <a href="#api_nan_set_internal_field_pointer"><b><code>NanSetInternalFieldPointer</code></b></a>\n * <a href="#api_nan_object_wrap_handle"><b><code>NanObjectWrapHandle</code></b></a>\n * <del><a href="#api_nan_symbol"><b><code>NanSymbol</code></b></a></del>\n * <a href="#api_nan_get_pointer_safe"><b><code>NanGetPointerSafe</code></b></a>\n * <a href="#api_nan_set_pointer_safe"><b><code>NanSetPointerSafe</code></b></a>\n * <del><a href="#api_nan_raw_string"><b><code>NanRawString</code></b></a></del>\n * <del><a href="#api_nan_c_string"><b><code>NanCString</code></b></a></del>\n * <a href="#api_nan_ascii_string"><b><code>NanAsciiString</code></b></a>\n * <a href="#api_nan_utf8_string"><b><code>NanUtf8String</code></b></a>\n * <a href="#api_nan_ucs2_string"><b><code>NanUcs2String</code></b></a>\n * <a href="#api_nan_boolean_option_value"><b><code>NanBooleanOptionValue</code></b></a>\n * <a href="#api_nan_uint32_option_value"><b><code>NanUInt32OptionValue</code></b></a>\n * <a href="#api_nan_error"><b><code>NanError</code></b>, <b><code>NanTypeError</code></b>, <b><code>NanRangeError</code></b></a>\n * <a href="#api_nan_throw_error"><b><code>NanThrowError</code></b>, <b><code>NanThrowTypeError</code></b>, <b><code>NanThrowRangeError</code></b>, <b><code>NanThrowError(Handle<Value>)</code></b>, <b><code>NanThrowError(Handle<Value>, int)</code></b></a>\n * <a href="#api_nan_new_buffer_handle"><b><code>NanNewBufferHandle(char *, size_t, FreeCallback, void *)</code></b>, <b><code>NanNewBufferHandle(char *, uint32_t)</code></b>, <b><code>NanNewBufferHandle(uint32_t)</code></b></a>\n * <a href="#api_nan_buffer_use"><b><code>NanBufferUse(char *, uint32_t)</code></b></a>\n * <del><a href="#api_nan_new_context_handle"><b><code>NanNewContextHandle</code></b></a></del>\n * <a href="#api_nan_get_current_context"><b><code>NanGetCurrentContext</code></b></a>\n * <a href="#api_nan_has_instance"><b><code>NanHasInstance</code></b></a>\n * <a href="#api_nan_dispose_persistent"><b><code>NanDisposePersistent</code></b></a>\n * <a href="#api_nan_assign_persistent"><b><code>NanAssignPersistent</code></b></a>\n * <a href="#api_nan_make_weak_persistent"><b><code>NanMakeWeakPersistent</code></b></a>\n * <a href="#api_nan_set_template"><b><code>NanSetTemplate</code></b></a>\n * <a href="#api_nan_set_prototype_template"><b><code>NanSetPrototypeTemplate</code></b></a>\n * <a href="#api_nan_set_instance_template"><b><code>NanSetInstanceTemplate</code></b></a>\n * <a href="#api_nan_make_callback"><b><code>NanMakeCallback</code></b></a>\n * <a href="#api_nan_encode"><b><code>NanEncode</code></b></a>\n * <a href="#api_nan_decode_bytes"><b><code>NanDecodeBytes</code></b></a>\n * <a href="#api_nan_decode_write"><b><code>NanDecodeWrite</code></b></a>\n * <a href="#api_nan_compile_script"><b><code>NanCompileScript</code></b></a>\n * <a href="#api_nan_run_script"><b><code>NanRunScript</code></b></a>\n * <a href="#api_nan_adjust_external_memory"><b><code>NanAdjustExternalMemory</code></b></a>\n * <a href="#api_nan_add_gc_epilogue_callback"><b><code>NanAddGCEpilogueCallback</code></b></a>\n * <a href="#api_nan_add_gc_prologue_callback"><b><code>NanAddGCPrologueCallback</code></b></a>\n * <a href="#api_nan_remove_gc_epilogue_callback"><b><code>NanRemoveGCEpilogueCallback</code></b></a>\n * <a href="#api_nan_remove_gc_prologue_callback"><b><code>NanRemoveGCPrologueCallback</code></b></a>\n * <a href="#api_nan_get_heap_statistics"><b><code>NanGetHeapStatistics</code></b></a>\n * <a href="#api_nan_set_counter_function"><b><code>NanSetCounterFunction</code></b></a>\n * <a href="#api_nan_set_create_histogram_function"><b><code>NanSetCreateHistogramFunction</code></b></a>\n * <a href="#api_nan_set_add_histogram_sample_function"><b><code>NanSetAddHistogramSampleFunction</code></b></a>\n * <a href="#api_nan_idle_notification"><b><code>NanIdleNotification</code></b></a>\n * <a href="#api_nan_low_memory_notification"><b><code>NanLowMemoryNotification</code></b></a>\n * <a href="#api_nan_context_disposed_notification"><b><code>NanContextDisposedNotification</code></b></a>\n * <a href="#api_nan_callback"><b><code>NanCallback</code></b></a>\n * <a href="#api_nan_async_worker"><b><code>NanAsyncWorker</code></b></a>\n * <a href="#api_nan_async_queue_worker"><b><code>NanAsyncQueueWorker</code></b></a>\n\n<a name="api_nan_method"></a>\n### NAN_METHOD(methodname)\n\nUse `NAN_METHOD` to define your V8 accessible methods:\n\n```c++\n// .h:\nclass Foo : public node::ObjectWrap {\n  ...\n\n  static NAN_METHOD(Bar);\n  static NAN_METHOD(Baz);\n}\n\n\n// .cc:\nNAN_METHOD(Foo::Bar) {\n  ...\n}\n\nNAN_METHOD(Foo::Baz) {\n  ...\n}\n```\n\nThe reason for this macro is because of the method signature change in 0.11:\n\n```c++\n// 0.10 and below:\nHandle<Value> name(const Arguments& args)\n\n// 0.11 and above\nvoid name(const FunctionCallbackInfo<Value>& args)\n```\n\nThe introduction of `FunctionCallbackInfo` brings additional complications:\n\n<a name="api_nan_getter"></a>\n### NAN_GETTER(methodname)\n\nUse `NAN_GETTER` to declare your V8 accessible getters. You get a `Local<String>` `property` and an appropriately typed `args` object that can act like the `args` argument to a `NAN_METHOD` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_GETTER`.\n\n<a name="api_nan_setter"></a>\n### NAN_SETTER(methodname)\n\nUse `NAN_SETTER` to declare your V8 accessible setters. Same as `NAN_GETTER` but you also get a `Local<Value>` `value` object to work with.\n\n<a name="api_nan_property_getter"></a>\n### NAN_PROPERTY_GETTER(cbname)\nUse `NAN_PROPERTY_GETTER` to declare your V8 accessible property getters. You get a `Local<String>` `property` and an appropriately typed `args` object that can act similar to the `args` argument to a `NAN_METHOD` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_GETTER`.\n\n<a name="api_nan_property_setter"></a>\n### NAN_PROPERTY_SETTER(cbname)\nUse `NAN_PROPERTY_SETTER` to declare your V8 accessible property setters. Same as `NAN_PROPERTY_GETTER` but you also get a `Local<Value>` `value` object to work with.\n\n<a name="api_nan_property_enumerator"></a>\n### NAN_PROPERTY_ENUMERATOR(cbname)\nUse `NAN_PROPERTY_ENUMERATOR` to declare your V8 accessible property enumerators. You get an appropriately typed `args` object like the `args` argument to a `NAN_PROPERTY_GETTER` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_ENUMERATOR`.\n\n<a name="api_nan_property_deleter"></a>\n### NAN_PROPERTY_DELETER(cbname)\nUse `NAN_PROPERTY_DELETER` to declare your V8 accessible property deleters. Same as `NAN_PROPERTY_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_DELETER`.\n\n<a name="api_nan_property_query"></a>\n### NAN_PROPERTY_QUERY(cbname)\nUse `NAN_PROPERTY_QUERY` to declare your V8 accessible property queries. Same as `NAN_PROPERTY_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_QUERY`.\n\n<a name="api_nan_index_getter"></a>\n### NAN_INDEX_GETTER(cbname)\nUse `NAN_INDEX_GETTER` to declare your V8 accessible index getters. You get a `uint32_t` `index` and an appropriately typed `args` object that can act similar to the `args` argument to a `NAN_METHOD` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_GETTER`.\n\n<a name="api_nan_index_setter"></a>\n### NAN_INDEX_SETTER(cbname)\nUse `NAN_INDEX_SETTER` to declare your V8 accessible index setters. Same as `NAN_INDEX_GETTER` but you also get a `Local<Value>` `value` object to work with.\n\n<a name="api_nan_index_enumerator"></a>\n### NAN_INDEX_ENUMERATOR(cbname)\nUse `NAN_INDEX_ENUMERATOR` to declare your V8 accessible index enumerators. You get an appropriately typed `args` object like the `args` argument to a `NAN_INDEX_GETTER` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_ENUMERATOR`.\n\n<a name="api_nan_index_deleter"></a>\n### NAN_INDEX_DELETER(cbname)\nUse `NAN_INDEX_DELETER` to declare your V8 accessible index deleters. Same as `NAN_INDEX_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_DELETER`.\n\n<a name="api_nan_index_query"></a>\n### NAN_INDEX_QUERY(cbname)\nUse `NAN_INDEX_QUERY` to declare your V8 accessible index queries. Same as `NAN_INDEX_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_QUERY`.\n\n<a name="api_nan_gc_callback"></a>\n### NAN_GC_CALLBACK(cbname)\nUse `NAN_GC_CALLBACK` to declare your callbacks for `NanAddGCEpilogueCallback` and `NanAddGCPrologueCallback`. You get arguments `GCType type` and `GCCallbackFlags flags`.\n\n```c++\nstatic Persistent<Function> callback;\n\nNAN_GC_CALLBACK(gcPrologueCallback) {\n  Local<Value> argv[] = {NanNew("prologue")};\n  NanMakeCallback(NanGetCurrentContext()->Global(), NanNew(callback), 1, argv);\n}\n\nNAN_METHOD(Hook) {\n  NanScope();\n  NanAssignPersistent(callback, args[0].As<Function>());\n  NanAddGCPrologueCallback(gcPrologueCallback);\n  NanReturnValue(args.Holder());\n}\n```\n\n<a name="api_nan_weak_callback"></a>\n### NAN_WEAK_CALLBACK(cbname)\n\nUse `NAN_WEAK_CALLBACK` to define your V8 WeakReference callbacks. There is an argument object `const _NanWeakCallbackData<T, P> &data` allowing access to the weak object and the supplied parameter through its `GetValue` and `GetParameter` methods. You can even access the weak callback info object through the `GetCallbackInfo()`method, but you probably should not. `Revive()` keeps the weak object alive until the next GC round.\n\n```c++\nNAN_WEAK_CALLBACK(weakCallback) {\n  int *parameter = data.GetParameter();\n  NanMakeCallback(NanGetCurrentContext()->Global(), data.GetValue(), 0, NULL);\n  if ((*parameter)++ == 0) {\n    data.Revive();\n  } else {\n    delete parameter;\n  }\n}\n```\n\n<a name="api_nan_deprecated"></a>\n### NAN_DEPRECATED\nDeclares a function as deprecated.\n\n```c++\nstatic NAN_DEPRECATED NAN_METHOD(foo) {\n  ...\n}\n```\n\n<a name="api_nan_inline"></a>\n### NAN_INLINE\nInlines a function.\n\n```c++\nNAN_INLINE int foo(int bar) {\n  ...\n}\n```\n\n<a name="api_nan_new"></a>\n### Local&lt;T&gt; NanNew&lt;T&gt;( ... )\n\nUse `NanNew` to construct almost all v8 objects (bound `Script`s are constructed with <a href="#api_nan_compile_script">`NanCompileScript(Handle)`</a>) and make new local handles.\n\n```c++\nLocal<String> s = NanNew<String>("value");\n\n...\n\nPersistent<Object> o;\n\n...\n\nLocal<Object> lo = NanNew(o);\n\n```\n\n<a name="api_nan_undefined"></a>\n### Local&lt;Primitive&gt; NanUndefined()\n\nUse instead of `Undefined()`\n\n<a name="api_nan_null"></a>\n### Local&lt;Primitive&gt; NanNull()\n\nUse instead of `Null()`\n\n<a name="api_nan_true"></a>\n### Local&lt;Boolean&gt; NanTrue()\n\nUse instead of `True()`\n\n<a name="api_nan_false"></a>\n### Local&lt;Boolean&gt; NanFalse()\n\nUse instead of `False()`\n\n<a name="api_nan_return_value"></a>\n### NanReturnValue(Handle&lt;Value&gt;)\n\nUse `NanReturnValue` when you want to return a value from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  ...\n\n  NanReturnValue(NanNew<String>("FooBar!"));\n}\n```\n\nNo `return` statement required.\n\nFor convenience, `NanReturnValue` also accepts common primitives directly by implicitly performing an overloaded `NanNew(T)`.\n\n```c++\nNanReturnValue("FooBar!");\nNanReturnValue(true);\nNanReturnValue(12);\nNanReturnValue(3.14);\n```\n\n<a name="api_nan_return_undefined"></a>\n### NanReturnUndefined()\n\nUse `NanReturnUndefined` when you don\'t want to return anything from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnUndefined();\n}\n```\n\n<a name="api_nan_return_null"></a>\n### NanReturnNull()\n\nUse `NanReturnNull` when you want to return `Null` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnNull();\n}\n```\n\n<a name="api_nan_return_empty_string"></a>\n### NanReturnEmptyString()\n\nUse `NanReturnEmptyString` when you want to return an empty `String` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnEmptyString();\n}\n```\n\n<a name="api_nan_return_this"></a>\n### NanReturnThis()\n\nUse `NanReturnThis` when you want to return `This` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnThis();\n}\n```\n\n<a name="api_nan_return_holder"></a>\n### NanReturnHolder()\n\nUse `NanReturnHolder` when you want to return `Holder` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnHolder();\n}\n```\n\n<a name="api_nan_scope"></a>\n### NanScope()\n\nThe introduction of `isolate` references for many V8 calls in Node 0.11 makes `NanScope()` necessary, use it in place of `HandleScope scope` when you do not wish to return handles (`Handle` or `Local`) to the surrounding scope (or in functions directly exposed to V8, as they do not return values in the normal sense):\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  NanScope();\n\n  NanReturnValue(NanNew<String>("FooBar!"));\n}\n```\n\nThis method is not directly exposed to V8, nor does it return a handle, so it uses an unescapable scope:\n\n```c++\nbool Foo::Bar() {\n  NanScope();\n\n  Local<Boolean> val = NanFalse();\n  ...\n  return val->Value();\n}\n```\n\n<a name="api_nan_escapable_scope"></a>\n### NanEscapableScope()\n\nThe separation of handle scopes into escapable and inescapable scopes makes `NanEscapableScope()` necessary, use it in place of `HandleScope scope` when you later wish to return a handle (`Handle` or `Local`) from the scope, this is for internal functions not directly exposed to V8:\n\n```c++\nHandle<String> Foo::Bar() {\n  NanEscapableScope();\n\n  return NanEscapeScope(NanNew<String>("FooBar!"));\n}\n```\n\n<a name="api_nan_escape_scope"></a>\n### Local&lt;T&gt; NanEscapeScope(Handle&lt;T&gt; value);\nUse together with `NanEscapableScope` to escape the scope. Corresponds to `HandleScope::Close` or `EscapableHandleScope::Escape`.\n\n<a name="api_nan_locker"></a>\n### NanLocker()\n\nThe introduction of `isolate` references for many V8 calls in Node 0.11 makes `NanLocker()` necessary, use it in place of `Locker locker`:\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  NanLocker();\n  ...\n  NanUnlocker();\n}\n```\n\n<a name="api_nan_unlocker"></a>\n### NanUnlocker()\n\nThe introduction of `isolate` references for many V8 calls in Node 0.11 makes `NanUnlocker()` necessary, use it in place of `Unlocker unlocker`:\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  NanLocker();\n  ...\n  NanUnlocker();\n}\n```\n\n<a name="api_nan_get_internal_field_pointer"></a>\n### void * NanGetInternalFieldPointer(Handle&lt;Object&gt;, int)\n\nGets a pointer to the internal field with at `index` from a V8 `Object` handle.\n\n```c++\nLocal<Object> obj;\n...\nNanGetInternalFieldPointer(obj, 0);\n```\n<a name="api_nan_set_internal_field_pointer"></a>\n### void NanSetInternalFieldPointer(Handle&lt;Object&gt;, int, void *)\n\nSets the value of the internal field at `index` on a V8 `Object` handle.\n\n```c++\nstatic Persistent<Function> dataWrapperCtor;\n...\nLocal<Object> wrapper = NanNew(dataWrapperCtor)->NewInstance();\nNanSetInternalFieldPointer(wrapper, 0, this);\n```\n\n<a name="api_nan_object_wrap_handle"></a>\n### Local&lt;Object&gt; NanObjectWrapHandle(const node::ObjectWrap &amp;obj)\n\nWhen you want to fetch the V8 object handle from a native object you\'ve wrapped with Node\'s `ObjectWrap`, you should use `NanObjectWrapHandle`:\n\n```c++\nNanObjectWrapHandle(iterator)->Get(NanNew<String>("end"))\n```\n\n<a name="api_nan_symbol"></a>\n### ~~Local&lt;String&gt; NanSymbol(const char *)~~\n\nDeprecated. Use `NanNew<String>` instead.\n~~Use to create string symbol objects (i.e. `v8::String::NewSymbol(x)`), for getting and setting object properties, or names of objects.~~\n\n```c++\nbool foo = false;\nif (obj->Has(NanNew<String>("foo")))\n  foo = optionsObj->Get(NanNew<String>("foo"))->BooleanValue()\n```\n\n<a name="api_nan_get_pointer_safe"></a>\n### Type NanGetPointerSafe(Type *[, Type])\n\nA helper for getting values from optional pointers. If the pointer is `NULL`, the function returns the optional default value, which defaults to `0`.  Otherwise, the function returns the value the pointer points to.\n\n```c++\nchar *plugh(uint32_t *optional) {\n  char res[] = "xyzzy";\n  uint32_t param = NanGetPointerSafe<uint32_t>(optional, 0x1337);\n  switch (param) {\n    ...\n  }\n  NanSetPointerSafe<uint32_t>(optional, 0xDEADBEEF);\n}  \n```\n\n<a name="api_nan_set_pointer_safe"></a>\n### bool NanSetPointerSafe(Type *, Type)\n\nA helper for setting optional argument pointers. If the pointer is `NULL`, the function simply returns `false`.  Otherwise, the value is assigned to the variable the pointer points to.\n\n```c++\nconst char *plugh(size_t *outputsize) {\n  char res[] = "xyzzy";\n  if !(NanSetPointerSafe<size_t>(outputsize, strlen(res) + 1)) {\n    ...\n  }\n\n  ...\n}\n```\n\n<a name="api_nan_raw_string"></a>\n### ~~void* NanRawString(Handle&lt;Value&gt;, enum Nan::Encoding, size_t *, void *, size_t, int)~~\n\nDeprecated. Use something else.\n\n~~When you want to convert a V8 `String` to a `char*` buffer, use `NanRawString`. You have to supply an encoding as well as a pointer to a variable that will be assigned the number of bytes in the returned string. It is also possible to supply a buffer and its length to the function in order not to have a new buffer allocated. The final argument allows setting `String::WriteOptions`.\nJust remember that you\'ll end up with an object that you\'ll need to `delete[]` at some point unless you supply your own buffer:~~\n\n```c++\nsize_t count;\nvoid* decoded = NanRawString(args[1], Nan::BASE64, &count, NULL, 0, String::HINT_MANY_WRITES_EXPECTED);\n...\ndelete[] reinterpret_cast<char*>(decoded);\n```\n\n<a name="api_nan_c_string"></a>\n### ~~char* NanCString(Handle&lt;Value&gt;, size_t *[, char *, size_t, int])~~\n\nDeprecated. Use `String::Utf8Value` or `NanUtf8String` instead.\n\n~~When you want to convert a V8 `String` to a null-terminated C `char*` use `NanCString`. The resulting `char*` will be UTF-8-encoded, and you need to supply a pointer to a variable that will be assigned the number of bytes in the returned string. It is also possible to supply a buffer and its length to the function in order not to have a new buffer allocated. The final argument allows optionally setting `String::WriteOptions`, which default to `v8::String::NO_OPTIONS`.\nJust remember that you\'ll end up with an object that you\'ll need to `delete[]` at some point unless you supply your own buffer:~~\n\n```c++\nsize_t count;\nchar* name = NanCString(args[0], &count);\n...\ndelete[] name;\n```\n\n<a name="api_nan_ascii_string"></a>\n### NanAsciiString\n\nContrary to the name, this is not actually an ASCII string, it is a one-byte string with no particular encoding. Do not use unless you actually need this incorrect legacy behavior. Consider fixing your broken code instead. If you actually have a proper ASCII-string, use UTF-8, which is a proper superset of ASCII.\nConvert a `String` to zero-terminated, sort-of Ascii-encoded `char *`. The underlying buffer is freed when the owner object goes out of scope, so make a copy or heap allocation if you need it to stick around.\n\n```c++\nNAN_METHOD(foo) {\n  NanScope();\n  NanReturnValue(NanNew(*NanAsciiString(arg[0])));\n}\n```\n\n####*WRONG*:\nthe buffer `str` points to has been freed when `baz` was destroyed:\n```c++\nstatic char *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  NanAsciiString baz(arg[0]);\n\n  str = *baz;\n  NanReturnUndefined(); // baz goes out of scope, freeing str\n}\n\n...\n\nprintf(str); // use-after-free error\n```\n\n####*RIGHT*:\n```c++\nstatic NanAsciiString *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  str = new NanAsciiString(arg[0]);\n  NanReturnUndefined();\n}\n\n...\n\nprintf(**str);\n```\n\n<a name="api_nan_utf8_string"></a>\n### NanUtf8String\n\nEquivalent to `String::Utf8Value`, it only exists for the sake of completeness.\nConvert a `String` to zero-terminated, Utf8-encoded `char *`. The underlying buffer is freed when the owner object goes out of scope, so make a copy or heap allocation if you need it to stick around.\n\n```c++\nNAN_METHOD(foo) {\n  NanScope();\n  NanReturnValue(NanNew(*NanUtf8String(arg[0])));\n}\n```\n\n####*WRONG*:\nthe buffer `str` points to has been freed when `baz` was destroyed:\n```c++\nstatic char *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  NanUtf8String baz(arg[0]);\n\n  str = *baz;\n  NanReturnUndefined(); // baz goes out of scope, freeing str\n}\n\n...\n\nprintf(str); // use-after-free error\n```\n\n####*RIGHT*:\n```c++\nstatic NanUtf8String *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  str = new NanUtf8String(arg[0]);\n  NanReturnUndefined();\n}\n\n...\n\nprintf(**str);\n```\n\n\n<a name="api_nan_ucs2_string"></a>\n### NanUcs2String\n\nEquivalent to `String::Value`, it only exists for the sake of completeness.\nConvert a `String` to zero-terminated, Ucs2-encoded `uint16_t *`. The underlying buffer is freed when the owner object goes out of scope, so make a copy or heap allocation if you need it to stick around.\n\n```c++\nNAN_METHOD(foo) {\n  NanScope();\n  NanReturnValue(NanNew(*NanUcs2String(arg[0])));\n}\n```\n\n####*WRONG*:\nthe buffer `str` points to has been freed when `baz` was destroyed:\n```c++\nstatic char *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  NanUcs2String baz(arg[0]);\n\n  str = *baz;\n  NanReturnUndefined(); // baz goes out of scope, freeing str\n}\n\n...\n\nprintf(str); // use-after-free error\n```\n\n####*RIGHT*:\n```c++\nstatic NanUcs2String *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  str = new NanUcs2String(arg[0]);\n  NanReturnUndefined();\n}\n\n...\n\nprintf(**str);\n```\n\n<a name="api_nan_boolean_option_value"></a>\n### bool NanBooleanOptionValue(Handle&lt;Value&gt;, Handle&lt;String&gt;[, bool])\n\nWhen you have an "options" object that you need to fetch properties from, boolean options can be fetched with this pair. They check first if the object exists (`IsEmpty`), then if the object has the given property (`Has`) then they get and convert/coerce the property to a `bool`.\n\nThe optional last parameter is the *default* value, which is `false` if left off:\n\n```c++\n// `foo` is false unless the user supplies a truthy value for it\nbool foo = NanBooleanOptionValue(optionsObj, NanNew<String>("foo"));\n// `bar` is true unless the user supplies a falsy value for it\nbool bar = NanBooleanOptionValueDefTrue(optionsObj, NanNew<String>("bar"), true);\n```\n\n<a name="api_nan_uint32_option_value"></a>\n### uint32_t NanUInt32OptionValue(Handle&lt;Value&gt;, Handle&lt;String&gt;, uint32_t)\n\nSimilar to `NanBooleanOptionValue`, use `NanUInt32OptionValue` to fetch an integer option from your options object. Can be any kind of JavaScript `Number` and it will be coerced to an unsigned 32-bit integer.\n\nRequires all 3 arguments as a default is not optional:\n\n```c++\nuint32_t count = NanUInt32OptionValue(optionsObj, NanNew<String>("count"), 1024);\n```\n\n<a name="api_nan_error"></a>\n### NanError(message), NanTypeError(message), NanRangeError(message)\n\nFor making `Error`, `TypeError` and `RangeError` objects.\n\n```c++\nLocal<Value> res = NanError("you must supply a callback argument");\n```\n\n<a name="api_nan_throw_error"></a>\n### NanThrowError(message), NanThrowTypeError(message), NanThrowRangeError(message), NanThrowError(Local&lt;Value&gt;), NanThrowError(Local&lt;Value&gt;, int)\n\nFor throwing `Error`, `TypeError` and `RangeError` objects.\n\n```c++\nNanThrowError("you must supply a callback argument");\n```\n\nCan also handle any custom object you may want to throw. If used with the error code argument, it will add the supplied error code to the error object as a property called `code`.\n\n<a name="api_nan_new_buffer_handle"></a>\n### Local&lt;Object&gt; NanNewBufferHandle(char *, uint32_t), Local&lt;Object&gt; NanNewBufferHandle(uint32_t)\n\nThe `Buffer` API has changed a little in Node 0.11, this helper provides consistent access to `Buffer` creation:\n\n```c++\nNanNewBufferHandle((char*)value.data(), value.size());\n```\n\nCan also be used to initialize a `Buffer` with just a `size` argument.\n\nCan also be supplied with a `NanFreeCallback` and a hint for the garbage collector.\n\n<a name="api_nan_buffer_use"></a>\n### Local&lt;Object&gt; NanBufferUse(char*, uint32_t)\n\n`Buffer::New(char*, uint32_t)` prior to 0.11 would make a copy of the data.\nWhile it was possible to get around this, it required a shim by passing a\ncallback. So the new API `Buffer::Use(char*, uint32_t)` was introduced to remove\nneeding to use this shim.\n\n`NanBufferUse` uses the `char*` passed as the backing data, and will free the\nmemory automatically when the weak callback is called. Keep this in mind, as\ncareless use can lead to "double free or corruption" and other cryptic failures.\n\n<a name="api_nan_has_instance"></a>\n### bool NanHasInstance(Persistent&lt;FunctionTemplate&gt;&, Handle&lt;Value&gt;)\n\nCan be used to check the type of an object to determine it is of a particular class you have already defined and have a `Persistent<FunctionTemplate>` handle for.\n\n<a name="api_nan_new_context_handle"></a>\n### ~~Local&lt;Context&gt; NanNewContextHandle([ExtensionConfiguration*, Handle&lt;ObjectTemplate&gt;, Handle&lt;Value&gt;])~~\n\nDeprecated. Use `NanNew<Context>` instead.\n\n~~Creates a new `Local<Context>` handle.~~\n\n```c++\nLocal<FunctionTemplate> ftmpl = NanNew<FunctionTemplate>();\nLocal<ObjectTemplate> otmpl = ftmpl->InstanceTemplate();\nLocal<Context> ctx =  NanNewContextHandle(NULL, otmpl);\n```\n\n<a name="api_nan_get_current_context"></a>\n### Local&lt;Context&gt; NanGetCurrentContext()\n\nGets the current context.\n\n```c++\nLocal<Context> ctx = NanGetCurrentContext();\n```\n\n<a name="api_nan_dispose_persistent"></a>\n### void NanDisposePersistent(Persistent&lt;T&gt; &)\n\nUse `NanDisposePersistent` to dispose a `Persistent` handle.\n\n```c++\nNanDisposePersistent(persistentHandle);\n```\n\n<a name="api_nan_assign_persistent"></a>\n### NanAssignPersistent(handle, object)\n\nUse `NanAssignPersistent` to assign a non-`Persistent` handle to a `Persistent` one. You can no longer just declare a `Persistent` handle and assign directly to it later, you have to `Reset` it in Node 0.11, so this makes it easier.\n\nIn general it is now better to place anything you want to protect from V8\'s garbage collector as properties of a generic `Object` and then assign that to a `Persistent`. This works in older versions of Node also if you use `NanAssignPersistent`:\n\n```c++\nPersistent<Object> persistentHandle;\n\n...\n\nLocal<Object> obj = NanNew<Object>();\nobj->Set(NanNew<String>("key"), keyHandle); // where keyHandle might be a Local<String>\nNanAssignPersistent(persistentHandle, obj)\n```\n\n<a name="api_nan_make_weak_persistent"></a>\n### _NanWeakCallbackInfo&lt;T, P&gt;* NanMakeWeakPersistent(Handle&lt;T&gt;, P*, _NanWeakCallbackInfo&lt;T, P&gt;::Callback)\n\nCreates a weak persistent handle with the supplied parameter and `NAN_WEAK_CALLBACK`.\n\n```c++\nNAN_WEAK_CALLBACK(weakCallback) {\n\n...\n\n}\n\nLocal<Function> func;\n\n...\n\nint *parameter = new int(0);\nNanMakeWeakPersistent(func, parameter, &weakCallback);\n```\n\n<a name="api_nan_set_template"></a>\n### NanSetTemplate(templ, name, value [, attributes])\n\nUse to add properties on object and function templates.\n\n<a name="api_nan_set_prototype_template"></a>\n### NanSetPrototypeTemplate(templ, name, value [, attributes])\n\nUse to add prototype properties on function templates.\n\n<a name="api_nan_set_instance_template"></a>\n### NanSetInstanceTemplate(templ, name, value [, attributes])\n\nUse to add instance properties on function templates.\n\n<a name="api_nan_make_callback"></a>\n### NanMakeCallback(target, func, argc, argv)\n\nUse instead of `node::MakeCallback` to call javascript functions. This (or `NanCallback`) is the only proper way of calling functions. You must _*never, ever*_ directly use `Function::Call`, it will lead to run-time failures.\n\n<a name="api_nan_encode"></a>\n### NanEncode(const void*, size_t[, enum Nan::Encoding])\n\nReplaces `node::Encode`.\n\n<a name="api_nan_decode_bytes"></a>\n### NanDecodeBytes(v8::Handle&lt;v8::Value&gt;[, enum Nan::Encoding])\n\nReplaces `node::DecodeBytes`.\n\n<a name="api_nan_decode_write"></a>\n### NanDecodeWrite(char *, size_t, v8::Handle&lt;v8::Value&gt;[, enum Nan::Encoding])\n\nReplaces `node::DecodeWrite`.\n\n<a name="api_nan_compile_script"></a>\n### NanCompileScript(Handle<String> s [, const ScriptOrigin&amp; origin])\n\nUse to create new scripts bound to the current context.\n\n<a name="api_nan_run_script"></a>\n### NanRunScript(script)\n\nUse to run both bound and unbound scripts.\n\n<a name="api_nan_adjust_external_memory"></a>\n### NanAdjustExternalMemory(int change_in_bytes)\n\nSimply does `AdjustAmountOfExternalAllocatedMemory`, note that the argument and returned value have type `int`.\n\n<a name="api_nan_add_gc_epilogue_callback"></a>\n### NanAddGCEpilogueCallback(GCEpilogueCallback callback, GCType gc_type_filter=kGCTypeAll)\n\nSimply does `AddGCEpilogueCallback`\n\n<a name="api_nan_add_gc_prologue_callback"></a>\n### NanAddGCPrologueCallback(GCPrologueCallback callback, GCType gc_type_filter=kGCTypeAll)\n\nSimply does `AddGCPrologueCallback`\n\n<a name="api_nan_remove_gc_epilogue_callback"></a>\n### NanRemoveGCEpilogueCallback(GCEpilogueCallback callback)\n\nSimply does `RemoveGCEpilogueCallback`\n\n<a name="api_nan_remove_gc_prologue_callback"></a>\n### NanRemoveGCPrologueCallback(GCPrologueCallback callback)\n\nSimply does `RemoveGCPrologueCallback`\n\n<a name="api_nan_get_heap_statistics"></a>\n### NanGetHeapStatistics(HeapStatistics *heap_statistics)\n\nSimply does `GetHeapStatistics`\n\n<a name="api_nan_set_counter_function"></a>\n### NanSetCounterFunction(CounterLookupCallback cb)\n\nSimply does `SetCounterFunction`\n\n<a name="api_nan_set_create_histogram_function"></a>\n### NanSetCreateHistogramFunction(CreateHistogramCallback cb)\n\nSimply does `SetCreateHistogramFunction`\n\n<a name="api_nan_set_add_histogram_sample_function"></a>\n### NanSetAddHistogramSampleFunction(AddHistogramSampleCallback cb)\n\nSimply does `SetAddHistogramSampleFunction`\n\n<a name="api_nan_idle_notification"></a>\n### NanIdleNotification(int idle_time_in_ms)\n\nSimply does `IdleNotification`\n\n<a name="api_nan_low_memory_notification"></a>\n### NanLowMemoryNotification()\n\nSimply does `LowMemoryNotification`\n\n<a name="api_nan_context_disposed_notification"></a>\n### NanContextDisposedNotification()\n\nSimply does `ContextDisposedNotification`\n\n<a name="api_nan_callback"></a>\n### NanCallback\n\nBecause of the difficulties imposed by the changes to `Persistent` handles in V8 in Node 0.11, creating `Persistent` versions of your `Handle<Function>` is annoyingly tricky. `NanCallback` makes it easier by taking your handle, making it persistent until the `NanCallback` is deleted and even providing a handy `Call()` method to fetch and execute the callback `Function`.\n\n```c++\nLocal<Function> callbackHandle = args[0].As<Function>();\nNanCallback *callback = new NanCallback(callbackHandle);\n// pass `callback` around and it\'s safe from GC until you:\ndelete callback;\n```\n\nYou can execute the callback like so:\n\n```c++\n// no arguments:\ncallback->Call(0, NULL);\n\n// an error argument:\nHandle<Value> argv[] = {\n  NanError(NanNew<String>("fail!"))\n};\ncallback->Call(1, argv);\n\n// a success argument:\nHandle<Value> argv[] = {\n  NanNull(),\n  NanNew<String>("w00t!")\n};\ncallback->Call(2, argv);\n```\n\n`NanCallback` also has a `Local<Function> GetFunction()` method that you can use\nto fetch a local handle to the underlying callback function, as well  as a\n`void SetFunction(Handle<Function>)` for setting the callback on the\n`NanCallback`. You can check if a `NanCallback` is empty with the `bool IsEmpty()` method. Additionally a generic constructor is available for using\n`NanCallback` without performing heap allocations.\n\n<a name="api_nan_async_worker"></a>\n### NanAsyncWorker\n\n`NanAsyncWorker` is an abstract class that you can subclass to have much of the annoying async queuing and handling taken care of for you. It can even store arbitrary V8 objects for you and have them persist while the async work is in progress.\n\nSee a rough outline of the implementation:\n\n```c++\nclass NanAsyncWorker {\npublic:\n  NanAsyncWorker (NanCallback *callback);\n\n  // Clean up persistent handles and delete the *callback\n  virtual ~NanAsyncWorker ();\n\n  // Check the `ErrorMessage()` and call HandleOKCallback()\n  // or HandleErrorCallback depending on whether it has been set or not\n  virtual void WorkComplete ();\n\n  // You must implement this to do some async work. If there is an\n  // error then use `SetErrorMessage()` to set an error message and the callback will\n  // be passed that string in an Error object\n  virtual void Execute ();\n\n  // Save a V8 object in a Persistent handle to protect it from GC\n  void SaveToPersistent(const char *key, Local<Object> &obj);\n\n  // Fetch a stored V8 object (don\'t call from within `Execute()`)\n  Local<Object> GetFromPersistent(const char *key);\n\n  // Get the error message (or NULL)\n  const char *ErrorMessage();\n\n  // Set an error message\n  void SetErrorMessage(const char *msg);\n\nprotected:\n  // Default implementation calls the callback function with no arguments.\n  // Override this to return meaningful data\n  virtual void HandleOKCallback ();\n\n  // Default implementation calls the callback function with an Error object\n  // wrapping the `errmsg` string\n  virtual void HandleErrorCallback ();\n};\n```\n\n<a name="api_nan_async_queue_worker"></a>\n### NanAsyncQueueWorker(NanAsyncWorker *)\n\n`NanAsyncQueueWorker` will run a `NanAsyncWorker` asynchronously via libuv. Both the *execute* and *after_work* steps are taken care of for you&mdash;most of the logic for this is embedded in `NanAsyncWorker`.\n\n<a name="api"></a>\n### Tests\n\nTo run the NAN tests do:\n\n``` sh\nnpm install\nnpm run-script rebuild-tests\nnpm test\n```\n\nOr just:\n\n``` sh\nnpm install\nmake test\n```\n\n## Porting\n\nFollows is a guide to porting your C++ node to NAN.\n\n<table><tbody>\n\n<tr><th>Aspect</th><th>Without NAN</th><th>With NAN</th></tr>\n\n<tr><td>Function declaration</td><td><pre>class MyClass : public ObjectWrap {\n    ....\n    static Handle<Value> ToString(const Arguments& args);\n    ....\n}</pre></td></th><td><pre>class MyClass : public ObjectWrap {\n    ....\n    static NAN_METHOD(ToString);\n    ....\n}</pre></td></tr>\n\n<tr><td>Function definition</td><td><pre>Handle<Value>\nMyClass::ToString(const Arguments& args)\n{\n\tHandleScope scope;\n\t....\n}</pre></td></th><td><pre>\nNAN_METHOD(MyClass::ToString)\n{\n  NanScope();\n  ....\n}</pre></td></tr>\n\n<tr><td>Return a value</td><td><pre>return scope.Close(result);</pre></td></th><td><pre>NanReturnValue(result);</pre></td></tr>\n\n<tr><td>Return undefined</td><td><pre>return Undefined();</pre></td></th><td><pre>NanReturnUndefined();</pre></td></tr>\n\n<tr><td>Throw an error</td><td><pre>return ThrowException(\n  Exception::Error(\n    String::New("Error text...")));</pre></td></th><td><pre>return NanThrowError("Error text...");</pre></td></tr>\n\n<tr><td>New v8 string literal</td><td><pre>String::NewSymbol("my text")</pre></td></th><td><pre>NanNew("my text")</pre></td></tr>\n\n</tbody></table>\n\n## Contributors\n\n<a name="governance"></a>\n\n## Governance & Contributing\n\nNAN is governed by the [io.js](https://iojs.org/) Addon API Working Group\n\n### Addon API Working Group (WG)\n\nThe NAN project is jointly governed by a Working Group which is responsible for high-level guidance of the project.\n\nMembers of the WG are also known as Collaborators, there is no distinction between the two, unlike other io.js projects.\n\nThe WG has final authority over this project including:\n\n* Technical direction\n* Project governance and process (including this policy)\n* Contribution policy\n* GitHub repository hosting\n* Maintaining the list of additional Collaborators\n\nFor the current list of WG members, see the project [README.md](./README.md#collaborators).\n\nIndividuals making significant and valuable contributions are made members of the WG and given commit-access to the project. These individuals are identified by the WG and their addition to the WG is discussed via GitHub and requires unanimous consensus amongst those WG members participating in the discussion with a quorum of 50% of WG members required for acceptance of the vote.\n\n_Note:_ If you make a significant contribution and are not considered for commit-access log an issue or contact a WG member directly.\n\nFor the current list of WG members / Collaborators, see the project [README.md](./README.md#collaborators).\n\n### Consensus Seeking Process\n\nThe WG follows a [Consensus Seeking](http://en.wikipedia.org/wiki/Consensus-seeking_decision-making) decision making model.\n\nModifications of the contents of the NAN repository are made on a collaborative basis. Anybody with a GitHub account may propose a modification via pull request and it will be considered by the WG. All pull requests must be reviewed and accepted by a WG member with sufficient expertise who is able to take full responsibility for the change. In the case of pull requests proposed by an existing WG member, an additional WG member is required for sign-off. Consensus should be sought if additional WG members participate and there is disagreement around a particular modification.\n\nIf a change proposal cannot reach a consensus, a WG member can call for a vote amongst the members of the WG. Simple majority wins.\n\n### Developer\'s Certificate of Origin 1.0\n\nBy making a contribution to this project, I certify that:\n\n* (a) The contribution was created in whole or in part by me and I have the right to submit it under the open source license indicated in the file; or\n* (b) The contribution is based upon previous work that, to the best of my knowledge, is covered under an appropriate open source license and I have the right under that license to submit that work with modifications, whether created in whole or in part by me, under the same open source license (unless I am permitted to submit under a different license), as indicated in the file; or\n* (c) The contribution was provided directly to me by some other person who certified (a), (b) or (c) and I have not modified it.\n\n<a name="collaborators"></a>\n### WG Members / Collaborators\n\n<table><tbody>\n<tr><th align="left">Rod Vagg</th><td><a href="https://github.com/rvagg">GitHub/rvagg</a></td><td><a href="http://twitter.com/rvagg">Twitter/@rvagg</a></td></tr>\n<tr><th align="left">Benjamin Byholm</th><td><a href="https://github.com/kkoopa/">GitHub/kkoopa</a></td><td>-</td></tr>\n<tr><th align="left">Trevor Norris</th><td><a href="https://github.com/trevnorris">GitHub/trevnorris</a></td><td><a href="http://twitter.com/trevnorris">Twitter/@trevnorris</a></td></tr>\n<tr><th align="left">Nathan Rajlich</th><td><a href="https://github.com/TooTallNate">GitHub/TooTallNate</a></td><td><a href="http://twitter.com/TooTallNate">Twitter/@TooTallNate</a></td></tr>\n<tr><th align="left">Brett Lawson</th><td><a href="https://github.com/brett19">GitHub/brett19</a></td><td><a href="http://twitter.com/brett19x">Twitter/@brett19x</a></td></tr>\n<tr><th align="left">Ben Noordhuis</th><td><a href="https://github.com/bnoordhuis">GitHub/bnoordhuis</a></td><td><a href="http://twitter.com/bnoordhuis">Twitter/@bnoordhuis</a></td></tr>\n<tr><th align="left">David Siegel</th><td><a href="https://github.com/agnat">GitHub/agnat</a></td><td>-</td></tr>\n</tbody></table>\n\n## Licence &amp; copyright\n\nCopyright (c) 2015 NAN WG Members / Collaborators (listed above).\n\nNative Abstractions for Node.js is licensed under an MIT license. All rights not explicitly granted in the MIT license are reserved. See the included LICENSE file for more details.\n',
541 silly resolved     readmeFilename: 'README.md',
541 silly resolved     bugs: { url: 'https://github.com/iojs/nan/issues' },
541 silly resolved     homepage: 'https://github.com/iojs/nan',
541 silly resolved     _id: 'nan@1.8.4',
541 silly resolved     _from: 'nan@^1.6.2' } ]
542 info install nan@1.8.4 into c:\Users\open\desktop\blog-project\node_modules\scrypt
543 info installOne nan@1.8.4
544 info c:\Users\open\desktop\blog-project\node_modules\scrypt\node_modules\nan unbuild
545 verbose tar unpack C:\Users\open\AppData\Roaming\npm-cache\nan\1.8.4\package.tgz
546 silly lockFile 8892a46b--modules-scrypt-node-modules-nan tar://c:\Users\open\desktop\blog-project\node_modules\scrypt\node_modules\nan
547 verbose lock tar://c:\Users\open\desktop\blog-project\node_modules\scrypt\node_modules\nan C:\Users\open\AppData\Roaming\npm-cache\8892a46b--modules-scrypt-node-modules-nan.lock
548 silly lockFile a3525770--npm-cache-nan-1-8-4-package-tgz tar://C:\Users\open\AppData\Roaming\npm-cache\nan\1.8.4\package.tgz
549 verbose lock tar://C:\Users\open\AppData\Roaming\npm-cache\nan\1.8.4\package.tgz C:\Users\open\AppData\Roaming\npm-cache\a3525770--npm-cache-nan-1-8-4-package-tgz.lock
550 silly gunzTarPerm modes [ '755', '644' ]
551 silly gunzTarPerm extractEntry package.json
552 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
553 silly gunzTarPerm extractEntry README.md
554 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
555 silly gunzTarPerm extractEntry include_dirs.js
556 silly gunzTarPerm modified mode [ 'include_dirs.js', 438, 420 ]
557 silly gunzTarPerm extractEntry .dntrc
558 silly gunzTarPerm modified mode [ '.dntrc', 438, 420 ]
559 silly gunzTarPerm extractEntry appveyor.yml
560 silly gunzTarPerm modified mode [ 'appveyor.yml', 438, 420 ]
561 silly gunzTarPerm extractEntry LICENSE.md
562 silly gunzTarPerm modified mode [ 'LICENSE.md', 438, 420 ]
563 silly gunzTarPerm extractEntry CHANGELOG.md
564 silly gunzTarPerm modified mode [ 'CHANGELOG.md', 438, 420 ]
565 silly gunzTarPerm extractEntry nan_implementation_12_inl.h
566 silly gunzTarPerm modified mode [ 'nan_implementation_12_inl.h', 438, 420 ]
567 silly gunzTarPerm extractEntry nan_implementation_pre_12_inl.h
568 silly gunzTarPerm modified mode [ 'nan_implementation_pre_12_inl.h', 438, 420 ]
569 silly gunzTarPerm extractEntry nan_new.h
570 silly gunzTarPerm modified mode [ 'nan_new.h', 438, 420 ]
571 silly gunzTarPerm extractEntry nan_string_bytes.h
572 silly gunzTarPerm modified mode [ 'nan_string_bytes.h', 438, 420 ]
573 silly gunzTarPerm extractEntry nan.h
574 silly gunzTarPerm modified mode [ 'nan.h', 438, 420 ]
575 silly lockFile 8892a46b--modules-scrypt-node-modules-nan tar://c:\Users\open\desktop\blog-project\node_modules\scrypt\node_modules\nan
576 silly lockFile 8892a46b--modules-scrypt-node-modules-nan tar://c:\Users\open\desktop\blog-project\node_modules\scrypt\node_modules\nan
577 silly lockFile a3525770--npm-cache-nan-1-8-4-package-tgz tar://C:\Users\open\AppData\Roaming\npm-cache\nan\1.8.4\package.tgz
578 silly lockFile a3525770--npm-cache-nan-1-8-4-package-tgz tar://C:\Users\open\AppData\Roaming\npm-cache\nan\1.8.4\package.tgz
579 info preinstall nan@1.8.4
580 verbose readDependencies using package.json deps
581 verbose readDependencies using package.json deps
582 silly resolved []
583 verbose about to build c:\Users\open\desktop\blog-project\node_modules\scrypt\node_modules\nan
584 info build c:\Users\open\desktop\blog-project\node_modules\scrypt\node_modules\nan
585 verbose linkStuff [ false,
585 verbose linkStuff   false,
585 verbose linkStuff   false,
585 verbose linkStuff   'c:\\Users\\open\\desktop\\blog-project\\node_modules\\scrypt\\node_modules' ]
586 info linkStuff nan@1.8.4
587 verbose linkBins nan@1.8.4
588 verbose linkMans nan@1.8.4
589 verbose rebuildBundles nan@1.8.4
590 info install nan@1.8.4
591 info postinstall nan@1.8.4
592 verbose about to build c:\Users\open\desktop\blog-project\node_modules\scrypt
593 info build c:\Users\open\desktop\blog-project\node_modules\scrypt
594 verbose linkStuff [ false,
594 verbose linkStuff   false,
594 verbose linkStuff   false,
594 verbose linkStuff   'c:\\Users\\open\\desktop\\blog-project\\node_modules' ]
595 info linkStuff scrypt@4.0.7
596 verbose linkBins scrypt@4.0.7
597 verbose linkMans scrypt@4.0.7
598 verbose rebuildBundles scrypt@4.0.7
599 verbose rebuildBundles [ 'nan' ]
600 info install scrypt@4.0.7
601 verbose unsafe-perm in lifecycle true
602 info scrypt@4.0.7 Failed to exec install script
603 info c:\Users\open\desktop\blog-project\node_modules\scrypt unbuild
604 info preuninstall scrypt@4.0.7
605 info uninstall scrypt@4.0.7
606 verbose true,c:\Users\open\desktop\blog-project\node_modules,c:\Users\open\desktop\blog-project\node_modules unbuild scrypt@4.0.7
607 info postuninstall scrypt@4.0.7
608 error scrypt@4.0.7 install: `node-gyp rebuild`
608 error Exit status 1
609 error Failed at the scrypt@4.0.7 install script.
609 error This is most likely a problem with the scrypt package,
609 error not with npm itself.
609 error Tell the author that this fails on your system:
609 error     node-gyp rebuild
609 error You can get their info via:
609 error     npm owner ls scrypt
609 error There is likely additional logging output above.
610 error System Windows_NT 6.1.7601
611 error command "c:\\Program Files\\nodejs\\node.exe" "c:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "install" "scrypt"
612 error cwd c:\Users\open\desktop\blog-project
613 error node -v v0.10.26
614 error npm -v 1.4.3
615 error code ELIFECYCLE
616 verbose exit [ 1, true ]
